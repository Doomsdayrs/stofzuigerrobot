{"config":{"output_file":null,"full_docs":false,"pub_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"alga","disambiguator":[6248514204477220435,7250473073197452449]},"crate_root":".cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.2/src","external_crates":[{"file_name":"/home/alfonso/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.2/src/lib.rs","num":14,"id":{"name":"approx","disambiguator":[8460166114553200781,11230349962535467541]}},{"file_name":"/home/alfonso/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.2/src/lib.rs","num":11,"id":{"name":"num_traits","disambiguator":[1790581144187340153,12851562522315166181]}},{"file_name":"/home/alfonso/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.2/src/lib.rs","num":8,"id":{"name":"compiler_builtins","disambiguator":[8738806026161230330,3781608880844894588]}},{"file_name":"/home/alfonso/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.2/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[10336128633598011868,10340831318577393010]}},{"file_name":"/home/alfonso/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[3581102226906677031,3276304826724359617]}},{"file_name":"/home/alfonso/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.2/src/lib.rs","num":13,"id":{"name":"rustc_serialize","disambiguator":[10214971898540045993,15973922386253681999]}},{"file_name":"/home/alfonso/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.2/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[703681872048928520,9049002948068361285]}},{"file_name":"/home/alfonso/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[2263930034501991030,4095801913223090716]}},{"file_name":"/home/alfonso/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.2/src/lib.rs","num":4,"id":{"name":"std_unicode","disambiguator":[11540587595057943686,16811948693617420789]}},{"file_name":"/home/alfonso/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18135972976458475440,14500584310801144659]}},{"file_name":"/home/alfonso/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.2/src/lib.rs","num":12,"id":{"name":"num_complex","disambiguator":[13945579717229413604,8115053111621111314]}},{"file_name":"/home/alfonso/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.2/src/lib.rs","num":9,"id":{"name":"alloc_jemalloc","disambiguator":[3136525304541147205,13942228075046867031]}},{"file_name":"/home/alfonso/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6188724401783059987,18077621352408124788]}},{"file_name":"/home/alfonso/.cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.2/src/lib.rs","num":3,"id":{"name":"alloc","disambiguator":[13692754116872877343,17091487213619735721]}}],"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":606,"byte_end":956,"line_start":15,"line_end":33,"column_start":1,"column_end":16}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":138},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":11571,"byte_end":11585,"line_start":167,"line_end":167,"column_start":23,"column_end":37},"name":"AbstractModule","value":""},{"kind":"Use","ref_id":{"krate":0,"index":313},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":12047,"byte_end":12051,"line_start":175,"line_end":175,"column_start":21,"column_end":25},"name":"Real","value":""}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":606,"byte_end":956,"line_start":15,"line_end":33,"column_start":1,"column_end":16},"name":"","qualname":"::","value":".cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":10},{"krate":0,"index":491}],"decl_id":null,"docs":" Traits for algebra.\n","sig":null,"attributes":[{"value":"deny(non_camel_case_types)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":631,"byte_end":661,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"deny(unused_parens)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":662,"byte_end":685,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"deny(non_upper_case_globals)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":686,"byte_end":718,"line_start":19,"line_end":19,"column_start":1,"column_end":33}},{"value":"deny(unused_results)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":719,"byte_end":743,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"deny(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":744,"byte_end":766,"line_start":21,"line_end":21,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":10},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"general","qualname":"::general","value":".cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.2/src/general/mod.rs","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":34},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":43},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":106},{"krate":0,"index":131},{"krate":0,"index":141},{"krate":0,"index":244},{"krate":0,"index":288},{"krate":0,"index":370},{"krate":0,"index":385},{"krate":0,"index":409},{"krate":0,"index":435}],"decl_id":null,"docs":" Fundamental algebraic structures.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":78},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":12527,"byte_end":12540,"line_start":14,"line_end":14,"column_start":11,"column_end":24},"name":"AbstractMagma","qualname":"::general::one_operator::AbstractMagma","value":"AbstractMagma<O: Operator>:  Sized + Clone","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80}],"decl_id":null,"docs":" Types that are closed under a given operator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":12609,"byte_end":12616,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"operate","qualname":"::general::one_operator::AbstractMagma::operate","value":"fn (&self, right: &Self) -> Self","parent":{"krate":0,"index":78},"children":[],"decl_id":null,"docs":" Types that are closed under a given operator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":12706,"byte_end":12708,"line_start":20,"line_end":20,"column_start":8,"column_end":10},"name":"op","qualname":"::general::one_operator::AbstractMagma::op","value":"fn (&self, _: O, lhs: &Self) -> Self","parent":{"krate":0,"index":78},"children":[],"decl_id":null,"docs":" Types that are closed under a given operator.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":81},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":13009,"byte_end":13027,"line_start":32,"line_end":32,"column_start":11,"column_end":29},"name":"AbstractQuasigroup","qualname":"::general::one_operator::AbstractQuasigroup","value":"AbstractQuasigroup<O: Operator>:  PartialEq + AbstractMagma<O> + Inverse<O>","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83}],"decl_id":null,"docs":" A magma with the divisibility property.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":13228,"byte_end":13259,"line_start":37,"line_end":37,"column_start":8,"column_end":39},"name":"prop_inv_is_latin_square_approx","qualname":"::general::one_operator::AbstractQuasigroup::prop_inv_is_latin_square_approx","value":"fn (args: (Self, Self)) -> bool","parent":{"krate":0,"index":81},"children":[],"decl_id":null,"docs":" A magma with the divisibility property.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":13594,"byte_end":13618,"line_start":48,"line_end":48,"column_start":8,"column_end":32},"name":"prop_inv_is_latin_square","qualname":"::general::one_operator::AbstractQuasigroup::prop_inv_is_latin_square","value":"fn (args: (Self, Self)) -> bool","parent":{"krate":0,"index":81},"children":[],"decl_id":null,"docs":" A magma with the divisibility property.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":85},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":14866,"byte_end":14883,"line_start":97,"line_end":97,"column_start":11,"column_end":28},"name":"AbstractSemigroup","qualname":"::general::one_operator::AbstractSemigroup","value":"AbstractSemigroup<O: Operator>:  PartialEq + AbstractMagma<O>","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87}],"decl_id":null,"docs":" An associative magma.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":15064,"byte_end":15090,"line_start":100,"line_end":100,"column_start":8,"column_end":34},"name":"prop_is_associative_approx","qualname":"::general::one_operator::AbstractSemigroup::prop_is_associative_approx","value":"fn (args: (Self, Self, Self)) -> bool","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" An associative magma.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":15346,"byte_end":15365,"line_start":107,"line_end":107,"column_start":8,"column_end":27},"name":"prop_is_associative","qualname":"::general::one_operator::AbstractSemigroup::prop_is_associative","value":"fn (args: (Self, Self, Self)) -> bool","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" An associative magma.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":89},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":16570,"byte_end":16582,"line_start":150,"line_end":150,"column_start":11,"column_end":23},"name":"AbstractLoop","qualname":"::general::one_operator::AbstractLoop","value":"AbstractLoop<O: Operator>:  AbstractQuasigroup<O> + Identity<O>","parent":null,"children":[],"decl_id":null,"docs":" A quasigroup with an unique identity element.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":91},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":17864,"byte_end":17878,"line_start":200,"line_end":200,"column_start":11,"column_end":25},"name":"AbstractMonoid","qualname":"::general::one_operator::AbstractMonoid","value":"AbstractMonoid<O: Operator>:  AbstractSemigroup<O> + Identity<O>","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93}],"decl_id":null,"docs":" A semigroup equipped with an identity element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":18096,"byte_end":18142,"line_start":206,"line_end":206,"column_start":8,"column_end":54},"name":"prop_operating_identity_element_is_noop_approx","qualname":"::general::one_operator::AbstractMonoid::prop_operating_identity_element_is_noop_approx","value":"fn (args: (Self,)) -> bool","parent":{"krate":0,"index":91},"children":[],"decl_id":null,"docs":" A semigroup equipped with an identity element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":18449,"byte_end":18488,"line_start":215,"line_end":215,"column_start":8,"column_end":47},"name":"prop_operating_identity_element_is_noop","qualname":"::general::one_operator::AbstractMonoid::prop_operating_identity_element_is_noop","value":"fn (args: (Self,)) -> bool","parent":{"krate":0,"index":91},"children":[],"decl_id":null,"docs":" A semigroup equipped with an identity element.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":95},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":19633,"byte_end":19646,"line_start":257,"line_end":257,"column_start":11,"column_end":24},"name":"AbstractGroup","qualname":"::general::one_operator::AbstractGroup","value":"AbstractGroup<O: Operator>:  AbstractLoop<O> + AbstractMonoid<O>","parent":null,"children":[],"decl_id":null,"docs":" A group is a loop and a monoid at the same time.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":97},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":21019,"byte_end":21039,"line_start":307,"line_end":307,"column_start":11,"column_end":31},"name":"AbstractGroupAbelian","qualname":"::general::one_operator::AbstractGroupAbelian","value":"AbstractGroupAbelian<O: Operator>:  AbstractGroup<O>","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99}],"decl_id":null,"docs":" An commutative group.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":21225,"byte_end":21251,"line_start":311,"line_end":311,"column_start":8,"column_end":34},"name":"prop_is_commutative_approx","qualname":"::general::one_operator::AbstractGroupAbelian::prop_is_commutative_approx","value":"fn (args: (Self, Self)) -> bool","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" An commutative group.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":21488,"byte_end":21507,"line_start":319,"line_end":319,"column_start":8,"column_end":27},"name":"prop_is_commutative","qualname":"::general::one_operator::AbstractGroupAbelian::prop_is_commutative","value":"fn (args: (Self, Self)) -> bool","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" An commutative group.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":118},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":24576,"byte_end":24588,"line_start":14,"line_end":14,"column_start":11,"column_end":23},"name":"AbstractRing","qualname":"::general::two_operators::AbstractRing","value":"AbstractRing<A: Operator = Additive, M: Operator = Multiplicative>:  AbstractGroupAbelian<A> + AbstractMonoid<M>","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120}],"decl_id":null,"docs":" A ring is the combination of an abelian group and a multiplicative monoid structure.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":24873,"byte_end":24913,"line_start":19,"line_end":19,"column_start":8,"column_end":48},"name":"prop_mul_and_add_are_distributive_approx","qualname":"::general::two_operators::AbstractRing::prop_mul_and_add_are_distributive_approx","value":"fn (args: (Self, Self, Self)) -> bool","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":" A ring is the combination of an abelian group and a multiplicative monoid structure.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":25499,"byte_end":25532,"line_start":35,"line_end":35,"column_start":8,"column_end":41},"name":"prop_mul_and_add_are_distributive","qualname":"::general::two_operators::AbstractRing::prop_mul_and_add_are_distributive","value":"fn (args: (Self, Self, Self)) -> bool","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":" A ring is the combination of an abelian group and a multiplicative monoid structure.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":122},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":27602,"byte_end":27625,"line_start":107,"line_end":107,"column_start":11,"column_end":34},"name":"AbstractRingCommutative","qualname":"::general::two_operators::AbstractRingCommutative","value":"AbstractRingCommutative<A: Operator = Additive, M: Operator = Multiplicative>:  AbstractRing<A, M>","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124}],"decl_id":null,"docs":" A ring with a commutative multiplication.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":27865,"byte_end":27895,"line_start":110,"line_end":110,"column_start":8,"column_end":38},"name":"prop_mul_is_commutative_approx","qualname":"::general::two_operators::AbstractRingCommutative::prop_mul_is_commutative_approx","value":"fn (args: (Self, Self)) -> bool","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" A ring with a commutative multiplication.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":28246,"byte_end":28269,"line_start":121,"line_end":121,"column_start":8,"column_end":31},"name":"prop_mul_is_commutative","qualname":"::general::two_operators::AbstractRingCommutative::prop_mul_is_commutative","value":"fn (args: (Self, Self)) -> bool","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" A ring with a commutative multiplication.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":126},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":30117,"byte_end":30130,"line_start":184,"line_end":184,"column_start":11,"column_end":24},"name":"AbstractField","qualname":"::general::two_operators::AbstractField","value":"AbstractField<A: Operator = Additive, M: Operator = Multiplicative>:  AbstractRingCommutative<A, M> + AbstractGroupAbelian<M>","parent":null,"children":[],"decl_id":null,"docs":" A field is a commutative ring, and an abelian group under both operators.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":138},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,117,108,101,46,114,115],"byte_start":33493,"byte_end":33507,"line_start":21,"line_end":21,"column_start":11,"column_end":25},"name":"AbstractModule","qualname":"::general::module::AbstractModule","value":"AbstractModule<OpGroup: Operator = Additive, OpAdd: Operator = Additive, OpMul: Operator =\n Multiplicative>:  AbstractGroupAbelian<OpGroup>","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140}],"decl_id":null,"docs":" A module combines two sets: one with an abelian group structure and another with a\n commutative ring structure.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":139},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,117,108,101,46,114,115],"byte_start":33759,"byte_end":33771,"line_start":26,"line_end":26,"column_start":10,"column_end":22},"name":"AbstractRing","qualname":"::general::module::AbstractModule::AbstractRing","value":"type AbstractRing: AbstractRingCommutative<OpAdd, OpMul>;","parent":{"krate":0,"index":138},"children":[],"decl_id":null,"docs":" The underlying scalar field.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,117,108,101,46,114,115],"byte_start":33893,"byte_end":33904,"line_start":29,"line_end":29,"column_start":8,"column_end":19},"name":"multiply_by","qualname":"::general::module::AbstractModule::multiply_by","value":"fn (&self, r: Self::AbstractRing) -> Self","parent":{"krate":0,"index":138},"children":[],"decl_id":null,"docs":" A module combines two sets: one with an abelian group structure and another with a\n commutative ring structure.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":176},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":34487,"byte_end":34495,"line_start":16,"line_end":16,"column_start":11,"column_end":19},"name":"Identity","qualname":"::general::identity::Identity","value":"Identity<O: Operator>","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178}],"decl_id":null,"docs":" A type that is equipped with identity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":34548,"byte_end":34556,"line_start":18,"line_end":18,"column_start":8,"column_end":16},"name":"identity","qualname":"::general::identity::Identity::identity","value":"fn () -> Self","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" A type that is equipped with identity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":34617,"byte_end":34619,"line_start":22,"line_end":22,"column_start":8,"column_end":10},"name":"id","qualname":"::general::identity::Identity::id","value":"fn (_: O) -> Self","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" A type that is equipped with identity.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":962},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":35827,"byte_end":35829,"line_start":64,"line_end":64,"column_start":12,"column_end":14},"name":"Id","qualname":"::general::identity::Id","value":"Id {  }","parent":null,"children":[{"krate":0,"index":2147483822}],"decl_id":null,"docs":" The universal identity element wrt. a given operator, usually noted `Id` with a\n context-dependent subscript.","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":35788,"byte_end":35798,"line_start":62,"line_end":62,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":35980,"byte_end":35983,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<Id<O>>::new","value":"fn () -> Id<O>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":258},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":39680,"byte_end":39688,"line_start":9,"line_end":9,"column_start":11,"column_end":19},"name":"Operator","qualname":"::general::operator::Operator","value":"Operator:  Copy","parent":null,"children":[{"krate":0,"index":259}],"decl_id":null,"docs":" Trait implemented by types representing abstract operators.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":39764,"byte_end":39778,"line_start":11,"line_end":11,"column_start":8,"column_end":22},"name":"operator_token","qualname":"::general::operator::Operator::operator_token","value":"fn () -> Self","parent":{"krate":0,"index":258},"children":[],"decl_id":null,"docs":" Trait implemented by types representing abstract operators.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":260},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":39981,"byte_end":39988,"line_start":17,"line_end":17,"column_start":11,"column_end":18},"name":"Inverse","qualname":"::general::operator::Inverse","value":"Inverse<O: Operator>:  Sized","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262}],"decl_id":null,"docs":" Trait used to define the inverse element relative to the given operator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":40087,"byte_end":40094,"line_start":19,"line_end":19,"column_start":8,"column_end":15},"name":"inverse","qualname":"::general::operator::Inverse::inverse","value":"fn (&self) -> Self","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Trait used to define the inverse element relative to the given operator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":40170,"byte_end":40181,"line_start":23,"line_end":23,"column_start":8,"column_end":19},"name":"inverse_mut","qualname":"::general::operator::Inverse::inverse_mut","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Trait used to define the inverse element relative to the given operator.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":965},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":40358,"byte_end":40366,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"Additive","qualname":"::general::operator::Additive","value":"","parent":null,"children":[],"decl_id":null,"docs":" The addition operator, commonly symbolized by `+`.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":40347,"byte_end":40367,"line_start":36,"line_end":36,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":969},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":40465,"byte_end":40479,"line_start":40,"line_end":40,"column_start":12,"column_end":26},"name":"Multiplicative","qualname":"::general::operator::Multiplicative","value":"","parent":null,"children":[],"decl_id":null,"docs":" The multiplication operator, commonly symbolized by `×`.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":40454,"byte_end":40480,"line_start":40,"line_end":40,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":973},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":40551,"byte_end":40567,"line_start":44,"line_end":44,"column_start":12,"column_end":28},"name":"AbstractOperator","qualname":"::general::operator::AbstractOperator","value":"","parent":null,"children":[],"decl_id":null,"docs":" The default abstract operator.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":40540,"byte_end":40568,"line_start":44,"line_end":44,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":278},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42063,"byte_end":42072,"line_start":122,"line_end":122,"column_start":11,"column_end":20},"name":"ClosedAdd","qualname":"::general::operator::ClosedAdd","value":"ClosedAdd<Right = Self>:  Sized + Add<Right, Output = Self> + AddAssign<Right>","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Trait alias for `Add` and `AddAsign` with result of type `Self`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":279},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42233,"byte_end":42242,"line_start":125,"line_end":125,"column_start":11,"column_end":20},"name":"ClosedSub","qualname":"::general::operator::ClosedSub","value":"ClosedSub<Right = Self>:  Sized + Sub<Right, Output = Self> + SubAssign<Right>","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Trait alias for `Sub` and `SubAsign` with result of type `Self`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":280},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42403,"byte_end":42412,"line_start":128,"line_end":128,"column_start":11,"column_end":20},"name":"ClosedMul","qualname":"::general::operator::ClosedMul","value":"ClosedMul<Right = Self>:  Sized + Mul<Right, Output = Self> + MulAssign<Right>","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Trait alias for `Mul` and `MulAsign` with result of type `Self`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":281},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42573,"byte_end":42582,"line_start":131,"line_end":131,"column_start":11,"column_end":20},"name":"ClosedDiv","qualname":"::general::operator::ClosedDiv","value":"ClosedDiv<Right = Self>:  Sized + Div<Right, Output = Self> + DivAssign<Right>","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Trait alias for `Div` and `DivAsign` with result of type `Self`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":282},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42728,"byte_end":42737,"line_start":134,"line_end":134,"column_start":11,"column_end":20},"name":"ClosedNeg","qualname":"::general::operator::ClosedNeg","value":"ClosedNeg:  Sized + Neg<Output = Self>","parent":null,"children":[],"decl_id":null,"docs":" [Alias] Trait alias for `Neg` with result of type `Self`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":313},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43867,"byte_end":43871,"line_start":19,"line_end":19,"column_start":11,"column_end":15},"name":"Real","qualname":"::general::real::Real","value":"Real:  SubsetOf<Self> + SupersetOf<f64> + Field + Copy + Num + FromPrimitive +\nNeg<Output = Self> + AddAssign + MulAssign + SubAssign + DivAssign +\nApproxEq<Epsilon = Self> + Lattice + PartialEq + Signed + Send + Sync + Any +\n'static + Debug + Display + Bounded","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368}],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44491,"byte_end":44496,"line_start":24,"line_end":24,"column_start":8,"column_end":13},"name":"floor","qualname":"::general::real::Real::floor","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44519,"byte_end":44523,"line_start":25,"line_end":25,"column_start":8,"column_end":12},"name":"ceil","qualname":"::general::real::Real::ceil","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44546,"byte_end":44551,"line_start":26,"line_end":26,"column_start":8,"column_end":13},"name":"round","qualname":"::general::real::Real::round","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44574,"byte_end":44579,"line_start":27,"line_end":27,"column_start":8,"column_end":13},"name":"trunc","qualname":"::general::real::Real::trunc","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44602,"byte_end":44607,"line_start":28,"line_end":28,"column_start":8,"column_end":13},"name":"fract","qualname":"::general::real::Real::fract","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44630,"byte_end":44633,"line_start":29,"line_end":29,"column_start":8,"column_end":11},"name":"abs","qualname":"::general::real::Real::abs","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44656,"byte_end":44662,"line_start":30,"line_end":30,"column_start":8,"column_end":14},"name":"signum","qualname":"::general::real::Real::signum","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44685,"byte_end":44701,"line_start":31,"line_end":31,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::general::real::Real::is_sign_positive","value":"fn (self) -> bool","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44724,"byte_end":44740,"line_start":32,"line_end":32,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::general::real::Real::is_sign_negative","value":"fn (self) -> bool","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44763,"byte_end":44770,"line_start":33,"line_end":33,"column_start":8,"column_end":15},"name":"mul_add","qualname":"::general::real::Real::mul_add","value":"fn (self, a: Self, b: Self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44811,"byte_end":44816,"line_start":34,"line_end":34,"column_start":8,"column_end":13},"name":"recip","qualname":"::general::real::Real::recip","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44839,"byte_end":44843,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"powi","qualname":"::general::real::Real::powi","value":"fn (self, n: i32) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44874,"byte_end":44878,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"powf","qualname":"::general::real::Real::powf","value":"fn (self, n: Self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44910,"byte_end":44914,"line_start":37,"line_end":37,"column_start":8,"column_end":12},"name":"sqrt","qualname":"::general::real::Real::sqrt","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44937,"byte_end":44940,"line_start":38,"line_end":38,"column_start":8,"column_end":11},"name":"exp","qualname":"::general::real::Real::exp","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44963,"byte_end":44967,"line_start":39,"line_end":39,"column_start":8,"column_end":12},"name":"exp2","qualname":"::general::real::Real::exp2","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44990,"byte_end":44992,"line_start":40,"line_end":40,"column_start":8,"column_end":10},"name":"ln","qualname":"::general::real::Real::ln","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45015,"byte_end":45018,"line_start":41,"line_end":41,"column_start":8,"column_end":11},"name":"log","qualname":"::general::real::Real::log","value":"fn (self, base: Self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45053,"byte_end":45057,"line_start":42,"line_end":42,"column_start":8,"column_end":12},"name":"log2","qualname":"::general::real::Real::log2","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45080,"byte_end":45085,"line_start":43,"line_end":43,"column_start":8,"column_end":13},"name":"log10","qualname":"::general::real::Real::log10","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45108,"byte_end":45111,"line_start":44,"line_end":44,"column_start":8,"column_end":11},"name":"max","qualname":"::general::real::Real::max","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45147,"byte_end":45150,"line_start":45,"line_end":45,"column_start":8,"column_end":11},"name":"min","qualname":"::general::real::Real::min","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45186,"byte_end":45190,"line_start":46,"line_end":46,"column_start":8,"column_end":12},"name":"cbrt","qualname":"::general::real::Real::cbrt","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45213,"byte_end":45218,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"hypot","qualname":"::general::real::Real::hypot","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45254,"byte_end":45257,"line_start":48,"line_end":48,"column_start":8,"column_end":11},"name":"sin","qualname":"::general::real::Real::sin","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45280,"byte_end":45283,"line_start":49,"line_end":49,"column_start":8,"column_end":11},"name":"cos","qualname":"::general::real::Real::cos","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45306,"byte_end":45309,"line_start":50,"line_end":50,"column_start":8,"column_end":11},"name":"tan","qualname":"::general::real::Real::tan","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45332,"byte_end":45336,"line_start":51,"line_end":51,"column_start":8,"column_end":12},"name":"asin","qualname":"::general::real::Real::asin","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45359,"byte_end":45363,"line_start":52,"line_end":52,"column_start":8,"column_end":12},"name":"acos","qualname":"::general::real::Real::acos","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45386,"byte_end":45390,"line_start":53,"line_end":53,"column_start":8,"column_end":12},"name":"atan","qualname":"::general::real::Real::atan","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45413,"byte_end":45418,"line_start":54,"line_end":54,"column_start":8,"column_end":13},"name":"atan2","qualname":"::general::real::Real::atan2","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45454,"byte_end":45461,"line_start":55,"line_end":55,"column_start":8,"column_end":15},"name":"sin_cos","qualname":"::general::real::Real::sin_cos","value":"fn (self) -> (Self, Self)","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45492,"byte_end":45498,"line_start":56,"line_end":56,"column_start":8,"column_end":14},"name":"exp_m1","qualname":"::general::real::Real::exp_m1","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45521,"byte_end":45526,"line_start":57,"line_end":57,"column_start":8,"column_end":13},"name":"ln_1p","qualname":"::general::real::Real::ln_1p","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45549,"byte_end":45553,"line_start":58,"line_end":58,"column_start":8,"column_end":12},"name":"sinh","qualname":"::general::real::Real::sinh","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45576,"byte_end":45580,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"cosh","qualname":"::general::real::Real::cosh","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45603,"byte_end":45607,"line_start":60,"line_end":60,"column_start":8,"column_end":12},"name":"tanh","qualname":"::general::real::Real::tanh","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45630,"byte_end":45635,"line_start":61,"line_end":61,"column_start":8,"column_end":13},"name":"asinh","qualname":"::general::real::Real::asinh","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45658,"byte_end":45663,"line_start":62,"line_end":62,"column_start":8,"column_end":13},"name":"acosh","qualname":"::general::real::Real::acosh","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45686,"byte_end":45691,"line_start":63,"line_end":63,"column_start":8,"column_end":13},"name":"atanh","qualname":"::general::real::Real::atanh","value":"fn (self) -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45716,"byte_end":45718,"line_start":66,"line_end":66,"column_start":8,"column_end":10},"name":"pi","qualname":"::general::real::Real::pi","value":"fn () -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45737,"byte_end":45743,"line_start":67,"line_end":67,"column_start":8,"column_end":14},"name":"two_pi","qualname":"::general::real::Real::two_pi","value":"fn () -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45762,"byte_end":45771,"line_start":68,"line_end":68,"column_start":8,"column_end":17},"name":"frac_pi_2","qualname":"::general::real::Real::frac_pi_2","value":"fn () -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45790,"byte_end":45799,"line_start":69,"line_end":69,"column_start":8,"column_end":17},"name":"frac_pi_3","qualname":"::general::real::Real::frac_pi_3","value":"fn () -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45818,"byte_end":45827,"line_start":70,"line_end":70,"column_start":8,"column_end":17},"name":"frac_pi_4","qualname":"::general::real::Real::frac_pi_4","value":"fn () -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45846,"byte_end":45855,"line_start":71,"line_end":71,"column_start":8,"column_end":17},"name":"frac_pi_6","qualname":"::general::real::Real::frac_pi_6","value":"fn () -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45874,"byte_end":45883,"line_start":72,"line_end":72,"column_start":8,"column_end":17},"name":"frac_pi_8","qualname":"::general::real::Real::frac_pi_8","value":"fn () -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45902,"byte_end":45911,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"frac_1_pi","qualname":"::general::real::Real::frac_1_pi","value":"fn () -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45930,"byte_end":45939,"line_start":74,"line_end":74,"column_start":8,"column_end":17},"name":"frac_2_pi","qualname":"::general::real::Real::frac_2_pi","value":"fn () -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45958,"byte_end":45972,"line_start":75,"line_end":75,"column_start":8,"column_end":22},"name":"frac_2_sqrt_pi","qualname":"::general::real::Real::frac_2_sqrt_pi","value":"fn () -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":45992,"byte_end":45993,"line_start":77,"line_end":77,"column_start":8,"column_end":9},"name":"e","qualname":"::general::real::Real::e","value":"fn () -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":46012,"byte_end":46018,"line_start":78,"line_end":78,"column_start":8,"column_end":14},"name":"log2_e","qualname":"::general::real::Real::log2_e","value":"fn () -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":46037,"byte_end":46044,"line_start":79,"line_end":79,"column_start":8,"column_end":15},"name":"log10_e","qualname":"::general::real::Real::log10_e","value":"fn () -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":46063,"byte_end":46067,"line_start":80,"line_end":80,"column_start":8,"column_end":12},"name":"ln_2","qualname":"::general::real::Real::ln_2","value":"fn () -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":46086,"byte_end":46091,"line_start":81,"line_end":81,"column_start":8,"column_end":13},"name":"ln_10","qualname":"::general::real::Real::ln_10","value":"fn () -> Self","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Trait shared by all reals.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43460,"byte_end":43482,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":374},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":52732,"byte_end":52747,"line_start":4,"line_end":4,"column_start":11,"column_end":26},"name":"MeetSemilattice","qualname":"::general::lattice::MeetSemilattice","value":"MeetSemilattice:  Sized","parent":null,"children":[{"krate":0,"index":375}],"decl_id":null,"docs":" A set where every two elements have an infimum (i.e. greatest lower bound).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":52819,"byte_end":52823,"line_start":6,"line_end":6,"column_start":8,"column_end":12},"name":"meet","qualname":"::general::lattice::MeetSemilattice::meet","value":"fn (&self, other: &Self) -> Self","parent":{"krate":0,"index":374},"children":[],"decl_id":null,"docs":" A set where every two elements have an infimum (i.e. greatest lower bound).\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":376},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":52948,"byte_end":52963,"line_start":10,"line_end":10,"column_start":11,"column_end":26},"name":"JoinSemilattice","qualname":"::general::lattice::JoinSemilattice","value":"JoinSemilattice:  Sized","parent":null,"children":[{"krate":0,"index":377}],"decl_id":null,"docs":" A set where every two elements have a suppremum (i.e. smallest upper bound).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":53036,"byte_end":53040,"line_start":12,"line_end":12,"column_start":8,"column_end":12},"name":"join","qualname":"::general::lattice::JoinSemilattice::join","value":"fn (&self, other: &Self) -> Self","parent":{"krate":0,"index":376},"children":[],"decl_id":null,"docs":" A set where every two elements have a suppremum (i.e. smallest upper bound).\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":378},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":53168,"byte_end":53175,"line_start":16,"line_end":16,"column_start":11,"column_end":18},"name":"Lattice","qualname":"::general::lattice::Lattice","value":"Lattice:  MeetSemilattice + JoinSemilattice + PartialOrd","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383}],"decl_id":null,"docs":" Partially orderable sets where every two elements have a suppremum and infimum.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":53308,"byte_end":53317,"line_start":19,"line_end":19,"column_start":8,"column_end":17},"name":"meet_join","qualname":"::general::lattice::Lattice::meet_join","value":"fn (&self, other: &Self) -> (Self, Self)","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" Partially orderable sets where every two elements have a suppremum and infimum.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":53503,"byte_end":53514,"line_start":25,"line_end":25,"column_start":8,"column_end":19},"name":"partial_min","qualname":"::general::lattice::Lattice::partial_min","value":"fn <'a, > (&'a self, other: &'a Self) -> Option<&'a Self>","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" Partially orderable sets where every two elements have a suppremum and infimum.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":53911,"byte_end":53922,"line_start":39,"line_end":39,"column_start":8,"column_end":19},"name":"partial_max","qualname":"::general::lattice::Lattice::partial_max","value":"fn <'a, > (&'a self, other: &'a Self) -> Option<&'a Self>","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" Partially orderable sets where every two elements have a suppremum and infimum.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":54311,"byte_end":54324,"line_start":53,"line_end":53,"column_start":8,"column_end":21},"name":"partial_sort2","qualname":"::general::lattice::Lattice::partial_sort2","value":"fn <'a, > (&'a self, other: &'a Self) -> Option<(&'a Self, &'a Self)>","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" Partially orderable sets where every two elements have a suppremum and infimum.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":54789,"byte_end":54802,"line_start":68,"line_end":68,"column_start":8,"column_end":21},"name":"partial_clamp","qualname":"::general::lattice::Lattice::partial_clamp","value":"fn <'a, > (&'a self, min: &'a Self, max: &'a Self) -> Option<&'a Self>","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" Partially orderable sets where every two elements have a suppremum and infimum.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":388},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":57563,"byte_end":57571,"line_start":22,"line_end":22,"column_start":11,"column_end":19},"name":"SubsetOf","qualname":"::general::subset::SubsetOf","value":"SubsetOf<T>:  Sized","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392}],"decl_id":null,"docs":" Nested sets and conversions between them (using an injective mapping). Useful to work with\n substructures. In generic code, it is preferable to use `SupersetOf` as trait bound whenever\n possible instead of `SubsetOf` (because SupersetOf is automatically implemented whenever\n `SubsetOf` is).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":57677,"byte_end":57688,"line_start":24,"line_end":24,"column_start":8,"column_end":19},"name":"to_superset","qualname":"::general::subset::SubsetOf::to_superset","value":"fn (&self) -> T","parent":{"krate":0,"index":388},"children":[],"decl_id":null,"docs":" Nested sets and conversions between them (using an injective mapping). Useful to work with\n substructures. In generic code, it is preferable to use `SupersetOf` as trait bound whenever\n possible instead of `SubsetOf` (because SupersetOf is automatically implemented whenever\n `SubsetOf` is).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":57904,"byte_end":57917,"line_start":30,"line_end":30,"column_start":8,"column_end":21},"name":"from_superset","qualname":"::general::subset::SubsetOf::from_superset","value":"fn (element: &T) -> Option<Self>","parent":{"krate":0,"index":388},"children":[],"decl_id":null,"docs":" Nested sets and conversions between them (using an injective mapping). Useful to work with\n substructures. In generic code, it is preferable to use `SupersetOf` as trait bound whenever\n possible instead of `SubsetOf` (because SupersetOf is automatically implemented whenever\n `SubsetOf` is).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":58231,"byte_end":58254,"line_start":40,"line_end":40,"column_start":15,"column_end":38},"name":"from_superset_unchecked","qualname":"::general::subset::SubsetOf::from_superset_unchecked","value":"fn (element: &T) -> Self","parent":{"krate":0,"index":388},"children":[],"decl_id":null,"docs":" Nested sets and conversions between them (using an injective mapping). Useful to work with\n substructures. In generic code, it is preferable to use `SupersetOf` as trait bound whenever\n possible instead of `SubsetOf` (because SupersetOf is automatically implemented whenever\n `SubsetOf` is).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":58381,"byte_end":58393,"line_start":43,"line_end":43,"column_start":8,"column_end":20},"name":"is_in_subset","qualname":"::general::subset::SubsetOf::is_in_subset","value":"fn (element: &T) -> bool","parent":{"krate":0,"index":388},"children":[],"decl_id":null,"docs":" Nested sets and conversions between them (using an injective mapping). Useful to work with\n substructures. In generic code, it is preferable to use `SupersetOf` as trait bound whenever\n possible instead of `SubsetOf` (because SupersetOf is automatically implemented whenever\n `SubsetOf` is).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":393},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":59565,"byte_end":59575,"line_start":63,"line_end":63,"column_start":11,"column_end":21},"name":"SupersetOf","qualname":"::general::subset::SupersetOf","value":"SupersetOf<T>:  Sized","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397}],"decl_id":null,"docs":" Nested sets and conversions between them. Useful to work with substructures. It is preferable\n to implement the `SupersetOf` trait instead of `SubsetOf` whenever possible (because\n `SupersetOf` is automatically implemented whenever `SubsetOf` is.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":59789,"byte_end":59798,"line_start":68,"line_end":68,"column_start":8,"column_end":17},"name":"to_subset","qualname":"::general::subset::SupersetOf::to_subset","value":"fn (&self) -> Option<T>","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Nested sets and conversions between them. Useful to work with substructures. It is preferable\n to implement the `SupersetOf` trait instead of `SubsetOf` whenever possible (because\n `SupersetOf` is automatically implemented whenever `SubsetOf` is.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":60066,"byte_end":60078,"line_start":78,"line_end":78,"column_start":8,"column_end":20},"name":"is_in_subset","qualname":"::general::subset::SupersetOf::is_in_subset","value":"fn (&self) -> bool","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Nested sets and conversions between them. Useful to work with substructures. It is preferable\n to implement the `SupersetOf` trait instead of `SubsetOf` whenever possible (because\n `SupersetOf` is automatically implemented whenever `SubsetOf` is.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":60208,"byte_end":60227,"line_start":81,"line_end":81,"column_start":15,"column_end":34},"name":"to_subset_unchecked","qualname":"::general::subset::SupersetOf::to_subset_unchecked","value":"fn (&self) -> T","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Nested sets and conversions between them. Useful to work with substructures. It is preferable\n to implement the `SupersetOf` trait instead of `SubsetOf` whenever possible (because\n `SupersetOf` is automatically implemented whenever `SubsetOf` is.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":60335,"byte_end":60346,"line_start":84,"line_end":84,"column_start":8,"column_end":19},"name":"from_subset","qualname":"::general::subset::SupersetOf::from_subset","value":"fn (element: &T) -> Self","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Nested sets and conversions between them. Useful to work with substructures. It is preferable\n to implement the `SupersetOf` trait instead of `SubsetOf` whenever possible (because\n `SupersetOf` is automatically implemented whenever `SubsetOf` is.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":433},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,115,112,101,99,105,97,108,105,122,101,100,46,114,115],"byte_start":66929,"byte_end":66935,"line_start":46,"line_end":46,"column_start":11,"column_end":17},"name":"Module","qualname":"::general::specialized::Module","value":"Module:  AbstractModule<AbstractRing = <Self as Module>::Ring> +\nAdditiveGroupAbelian + ClosedMul<<Self as Module>::Ring>","parent":null,"children":[{"krate":0,"index":434}],"decl_id":null,"docs":" A module which overloads the `*` and `+` operators.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":434},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,115,112,101,99,105,97,108,105,122,101,100,46,114,115],"byte_start":67156,"byte_end":67160,"line_start":51,"line_end":51,"column_start":10,"column_end":14},"name":"Ring","qualname":"::general::specialized::Module::Ring","value":"type Ring: RingCommutative;","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" The underlying scalar field.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":435},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"wrapper","qualname":"::general::wrapper","value":".cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.2/src/general/wrapper.rs","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":463},{"krate":0,"index":465},{"krate":0,"index":467},{"krate":0,"index":474},{"krate":0,"index":477},{"krate":0,"index":480},{"krate":0,"index":483},{"krate":0,"index":486},{"krate":0,"index":488}],"decl_id":null,"docs":" Wrappers that attach an algebraic structure with a value type.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1653},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":67667,"byte_end":67674,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"name":"Wrapper","qualname":"::general::wrapper::Wrapper","value":"Wrapper { val }","parent":null,"children":[{"krate":0,"index":2147483857},{"krate":0,"index":2147483858},{"krate":0,"index":2147483859}],"decl_id":null,"docs":" Wrapper that allows to use operators on algebraic types.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147483857},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":67694,"byte_end":67697,"line_start":17,"line_end":17,"column_start":9,"column_end":12},"name":"val","qualname":"::general::wrapper::Wrapper::val","value":"T","parent":{"krate":0,"index":1653},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":68290,"byte_end":68293,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<Wrapper<T, A, M>>::new","value":"fn (val: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":491},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"linear","qualname":"::linear","value":".cargo/registry/src/github.com-1ecc6299db9ec823/alga-0.5.2/src/linear/mod.rs","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":510},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":574},{"krate":0,"index":665},{"krate":0,"index":703}],"decl_id":null,"docs":" Traits dedicated to linear algebra.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":538},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":71476,"byte_end":71487,"line_start":7,"line_end":7,"column_start":11,"column_end":22},"name":"VectorSpace","qualname":"::linear::vector::VectorSpace","value":"VectorSpace:  Module<Ring = <Self as VectorSpace>::Field>","parent":null,"children":[{"krate":0,"index":539}],"decl_id":null,"docs":" A vector space has a module structure over a field instead of a ring.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":539},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":71652,"byte_end":71657,"line_start":10,"line_end":10,"column_start":10,"column_end":15},"name":"Field","qualname":"::linear::vector::VectorSpace::Field","value":"type Field: Field;","parent":{"krate":0,"index":538},"children":[],"decl_id":null,"docs":" The underlying scalar field.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":540},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":71706,"byte_end":71717,"line_start":14,"line_end":14,"column_start":11,"column_end":22},"name":"NormedSpace","qualname":"::linear::vector::NormedSpace","value":"NormedSpace:  VectorSpace","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546}],"decl_id":null,"docs":" A normed vector space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":71781,"byte_end":71793,"line_start":16,"line_end":16,"column_start":8,"column_end":20},"name":"norm_squared","qualname":"::linear::vector::NormedSpace::norm_squared","value":"fn (&self) -> Self::Field","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" A normed vector space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":71858,"byte_end":71862,"line_start":19,"line_end":19,"column_start":8,"column_end":12},"name":"norm","qualname":"::linear::vector::NormedSpace::norm","value":"fn (&self) -> Self::Field","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" A normed vector space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":71947,"byte_end":71956,"line_start":22,"line_end":22,"column_start":8,"column_end":17},"name":"normalize","qualname":"::linear::vector::NormedSpace::normalize","value":"fn (&self) -> Self","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" A normed vector space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":72043,"byte_end":72056,"line_start":25,"line_end":25,"column_start":8,"column_end":21},"name":"normalize_mut","qualname":"::linear::vector::NormedSpace::normalize_mut","value":"fn (&mut self) -> Self::Field","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" A normed vector space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":72190,"byte_end":72203,"line_start":28,"line_end":28,"column_start":8,"column_end":21},"name":"try_normalize","qualname":"::linear::vector::NormedSpace::try_normalize","value":"fn (&self, eps: Self::Field) -> Option<Self>","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" A normed vector space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":72438,"byte_end":72455,"line_start":33,"line_end":33,"column_start":8,"column_end":25},"name":"try_normalize_mut","qualname":"::linear::vector::NormedSpace::try_normalize_mut","value":"fn (&mut self, eps: Self::Field) -> Option<Self::Field>","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" A normed vector space.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":547},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":72758,"byte_end":72768,"line_start":41,"line_end":41,"column_start":11,"column_end":21},"name":"InnerSpace","qualname":"::linear::vector::InnerSpace","value":"InnerSpace:  NormedSpace<Field = <Self as InnerSpace>::Real>","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550}],"decl_id":null,"docs":" A vector space aquipped with an inner product.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":548},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":72912,"byte_end":72916,"line_start":43,"line_end":43,"column_start":10,"column_end":14},"name":"Real","qualname":"::linear::vector::InnerSpace::Real","value":"type Real: Real;","parent":{"krate":0,"index":547},"children":[],"decl_id":null,"docs":" The result of inner product (same as the field used by this vector space).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":72991,"byte_end":73004,"line_start":46,"line_end":46,"column_start":8,"column_end":21},"name":"inner_product","qualname":"::linear::vector::InnerSpace::inner_product","value":"fn (&self, other: &Self) -> Self::Real","parent":{"krate":0,"index":547},"children":[],"decl_id":null,"docs":" A vector space aquipped with an inner product.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":73111,"byte_end":73116,"line_start":50,"line_end":50,"column_start":8,"column_end":13},"name":"angle","qualname":"::linear::vector::InnerSpace::angle","value":"fn (&self, other: &Self) -> Self::Real","parent":{"krate":0,"index":547},"children":[],"decl_id":null,"docs":" A vector space aquipped with an inner product.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":551},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":73717,"byte_end":73737,"line_start":75,"line_end":75,"column_start":11,"column_end":31},"name":"FiniteDimVectorSpace","qualname":"::linear::vector::FiniteDimVectorSpace","value":"FiniteDimVectorSpace:  VectorSpace + Index<usize, Output = <Self as VectorSpace>::Field> +\nIndexMut<usize, Output = <Self as VectorSpace>::Field>","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557}],"decl_id":null,"docs":" A finite-dimensional vector space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":73971,"byte_end":73980,"line_start":79,"line_end":79,"column_start":8,"column_end":17},"name":"dimension","qualname":"::linear::vector::FiniteDimVectorSpace::dimension","value":"fn () -> usize","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" A finite-dimensional vector space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":74219,"byte_end":74234,"line_start":84,"line_end":84,"column_start":8,"column_end":23},"name":"canonical_basis","qualname":"::linear::vector::FiniteDimVectorSpace::canonical_basis","value":"fn <F> (mut f: F) -> ()","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" A finite-dimensional vector space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":74473,"byte_end":74496,"line_start":93,"line_end":93,"column_start":8,"column_end":31},"name":"canonical_basis_element","qualname":"::linear::vector::FiniteDimVectorSpace::canonical_basis_element","value":"fn (i: usize) -> Self","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" A finite-dimensional vector space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":74569,"byte_end":74572,"line_start":96,"line_end":96,"column_start":8,"column_end":11},"name":"dot","qualname":"::linear::vector::FiniteDimVectorSpace::dot","value":"fn (&self, other: &Self) -> Self::Field","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" A finite-dimensional vector space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":74680,"byte_end":74699,"line_start":99,"line_end":99,"column_start":15,"column_end":34},"name":"component_unchecked","qualname":"::linear::vector::FiniteDimVectorSpace::component_unchecked","value":"fn (&self, i: usize) -> &Self::Field","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" A finite-dimensional vector space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":74808,"byte_end":74831,"line_start":102,"line_end":102,"column_start":15,"column_end":38},"name":"component_unchecked_mut","qualname":"::linear::vector::FiniteDimVectorSpace::component_unchecked_mut","value":"fn (&mut self, i: usize) -> &mut Self::Field","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" A finite-dimensional vector space.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":558},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":75001,"byte_end":75020,"line_start":107,"line_end":107,"column_start":11,"column_end":30},"name":"FiniteDimInnerSpace","qualname":"::linear::vector::FiniteDimInnerSpace","value":"FiniteDimInnerSpace:  InnerSpace + FiniteDimVectorSpace<Field = <Self as InnerSpace>::Real>","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":560}],"decl_id":null,"docs":" A finite-dimensional vector space equipped with an inner product that must coincide\n with the dot product.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":75363,"byte_end":75377,"line_start":112,"line_end":112,"column_start":8,"column_end":22},"name":"orthonormalize","qualname":"::linear::vector::FiniteDimInnerSpace::orthonormalize","value":"fn (vs: &mut [Self]) -> usize","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" A finite-dimensional vector space equipped with an inner product that must coincide\n with the dot product.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":75710,"byte_end":75736,"line_start":118,"line_end":118,"column_start":8,"column_end":34},"name":"orthonormal_subspace_basis","qualname":"::linear::vector::FiniteDimInnerSpace::orthonormal_subspace_basis","value":"fn <F> (vs: &[Self], f: F) -> ()","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" A finite-dimensional vector space equipped with an inner product that must coincide\n with the dot product.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":561},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":75914,"byte_end":75925,"line_start":123,"line_end":123,"column_start":11,"column_end":22},"name":"AffineSpace","qualname":"::linear::vector::AffineSpace","value":"AffineSpace:  Sized + Clone + PartialEq + Sub<Self, Output =\n<Self as AffineSpace>::Translation> +\nClosedAdd<<Self as AffineSpace>::Translation>","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564}],"decl_id":null,"docs":" A set points associated with a vector space and a transitive and free additive group action\n (the translation).\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":562},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":76152,"byte_end":76163,"line_start":127,"line_end":127,"column_start":10,"column_end":21},"name":"Translation","qualname":"::linear::vector::AffineSpace::Translation","value":"type Translation: VectorSpace;","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" The associated vector space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":76330,"byte_end":76342,"line_start":132,"line_end":132,"column_start":8,"column_end":20},"name":"translate_by","qualname":"::linear::vector::AffineSpace::translate_by","value":"fn (&self, t: &Self::Translation) -> Self","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" A set points associated with a vector space and a transitive and free additive group action\n (the translation).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":76578,"byte_end":76586,"line_start":139,"line_end":139,"column_start":8,"column_end":16},"name":"subtract","qualname":"::linear::vector::AffineSpace::subtract","value":"fn (&self, right: &Self) -> Self::Translation","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" A set points associated with a vector space and a transitive and free additive group action\n (the translation).\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":565},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":76757,"byte_end":76771,"line_start":146,"line_end":146,"column_start":11,"column_end":25},"name":"EuclideanSpace","qualname":"::linear::vector::EuclideanSpace","value":"EuclideanSpace:  AffineSpace<Translation = <Self as EuclideanSpace>::Coordinates> +\nClosedMul<<Self as EuclideanSpace>::Real> +\nClosedDiv<<Self as EuclideanSpace>::Real> + Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573}],"decl_id":null,"docs":" The finite-dimensional affine space based on the field of reals.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":566},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":77254,"byte_end":77265,"line_start":154,"line_end":154,"column_start":10,"column_end":21},"name":"Coordinates","qualname":"::linear::vector::EuclideanSpace::Coordinates","value":"type Coordinates: FiniteDimInnerSpace<Real = Self::Real> +\n                 // XXX: the following bounds should not be necessary but the compiler does not\n                 // seem to be able to find them (from supertraits of VectorSpace)… Also, it won't\n                 // find them even if we add ClosedMul instead of Mul and MulAssign separately…\n                 Add<Self::Coordinates, Output = Self::Coordinates> +\n                 AddAssign<Self::Coordinates> +\n                 Sub<Self::Coordinates, Output = Self::Coordinates> +\n                 SubAssign<Self::Coordinates> +\n                 Mul<Self::Real, Output = Self::Coordinates> +\n                 MulAssign<Self::Real>                  +\n                 Div<Self::Real, Output = Self::Coordinates> +\n                 DivAssign<Self::Real>                  +\n                 Neg<Output = Self::Coordinates>;","parent":{"krate":0,"index":565},"children":[],"decl_id":null,"docs":" The underlying finite vector space.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":567},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":78468,"byte_end":78472,"line_start":174,"line_end":174,"column_start":10,"column_end":14},"name":"Real","qualname":"::linear::vector::EuclideanSpace::Real","value":"type Real: Real;","parent":{"krate":0,"index":565},"children":[],"decl_id":null,"docs":" The underlying reals.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":78743,"byte_end":78749,"line_start":180,"line_end":180,"column_start":8,"column_end":14},"name":"origin","qualname":"::linear::vector::EuclideanSpace::origin","value":"fn () -> Self","parent":{"krate":0,"index":565},"children":[],"decl_id":null,"docs":" The finite-dimensional affine space based on the field of reals.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":78891,"byte_end":78899,"line_start":186,"line_end":186,"column_start":8,"column_end":16},"name":"scale_by","qualname":"::linear::vector::EuclideanSpace::scale_by","value":"fn (&self, s: Self::Real) -> Self","parent":{"krate":0,"index":565},"children":[],"decl_id":null,"docs":" The finite-dimensional affine space based on the field of reals.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":79127,"byte_end":79138,"line_start":193,"line_end":193,"column_start":8,"column_end":19},"name":"coordinates","qualname":"::linear::vector::EuclideanSpace::coordinates","value":"fn (&self) -> Self::Coordinates","parent":{"krate":0,"index":565},"children":[],"decl_id":null,"docs":" The finite-dimensional affine space based on the field of reals.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":79304,"byte_end":79320,"line_start":199,"line_end":199,"column_start":8,"column_end":24},"name":"from_coordinates","qualname":"::linear::vector::EuclideanSpace::from_coordinates","value":"fn (coords: Self::Coordinates) -> Self","parent":{"krate":0,"index":565},"children":[],"decl_id":null,"docs":" The finite-dimensional affine space based on the field of reals.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":79472,"byte_end":79488,"line_start":205,"line_end":205,"column_start":8,"column_end":24},"name":"distance_squared","qualname":"::linear::vector::EuclideanSpace::distance_squared","value":"fn (&self, b: &Self) -> Self::Real","parent":{"krate":0,"index":565},"children":[],"decl_id":null,"docs":" The finite-dimensional affine space based on the field of reals.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":79631,"byte_end":79639,"line_start":211,"line_end":211,"column_start":8,"column_end":16},"name":"distance","qualname":"::linear::vector::EuclideanSpace::distance","value":"fn (&self, b: &Self) -> Self::Real","parent":{"krate":0,"index":565},"children":[],"decl_id":null,"docs":" The finite-dimensional affine space based on the field of reals.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":588},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":80046,"byte_end":80060,"line_start":8,"line_end":8,"column_start":11,"column_end":25},"name":"Transformation","qualname":"::linear::transformation::Transformation","value":"Transformation<E: EuclideanSpace>:  MultiplicativeMonoid","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":590}],"decl_id":null,"docs":" A general transformation acting on an euclidean space. It may not be inversible.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":80184,"byte_end":80199,"line_start":10,"line_end":10,"column_start":8,"column_end":23},"name":"transform_point","qualname":"::linear::transformation::Transformation::transform_point","value":"fn (&self, pt: &E) -> E","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" A general transformation acting on an euclidean space. It may not be inversible.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":80475,"byte_end":80491,"line_start":16,"line_end":16,"column_start":8,"column_end":24},"name":"transform_vector","qualname":"::linear::transformation::Transformation::transform_vector","value":"fn (&self, v: &E::Coordinates) -> E::Coordinates","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" A general transformation acting on an euclidean space. It may not be inversible.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":591},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":80631,"byte_end":80655,"line_start":20,"line_end":20,"column_start":11,"column_end":35},"name":"ProjectiveTransformation","qualname":"::linear::transformation::ProjectiveTransformation","value":"ProjectiveTransformation<E: EuclideanSpace>:  MultiplicativeGroup + Transformation<E>","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593}],"decl_id":null,"docs":" The most general form of inversible transformations on an euclidean space. \n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":80806,"byte_end":80829,"line_start":22,"line_end":22,"column_start":8,"column_end":31},"name":"inverse_transform_point","qualname":"::linear::transformation::ProjectiveTransformation::inverse_transform_point","value":"fn (&self, pt: &E) -> E","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" The most general form of inversible transformations on an euclidean space. \n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":81113,"byte_end":81137,"line_start":28,"line_end":28,"column_start":8,"column_end":32},"name":"inverse_transform_vector","qualname":"::linear::transformation::ProjectiveTransformation::inverse_transform_vector","value":"fn (&self, v: &E::Coordinates) -> E::Coordinates","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" The most general form of inversible transformations on an euclidean space. \n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":594},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":81366,"byte_end":81386,"line_start":33,"line_end":33,"column_start":11,"column_end":31},"name":"AffineTransformation","qualname":"::linear::transformation::AffineTransformation","value":"AffineTransformation<E: EuclideanSpace>:  ProjectiveTransformation<E>","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605}],"decl_id":null,"docs":" The group of affine transformations. They are decomposable into a rotation, a non-uniform\n scaling, a second rotation, and a translation (applied in that order).\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":595},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":81496,"byte_end":81504,"line_start":35,"line_end":35,"column_start":10,"column_end":18},"name":"Rotation","qualname":"::linear::transformation::AffineTransformation::Rotation","value":"type Rotation: Rotation<E>;","parent":{"krate":0,"index":594},"children":[],"decl_id":null,"docs":" Type of the first rotation to be applied.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":596},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":81583,"byte_end":81600,"line_start":37,"line_end":37,"column_start":10,"column_end":27},"name":"NonUniformScaling","qualname":"::linear::transformation::AffineTransformation::NonUniformScaling","value":"type NonUniformScaling: AffineTransformation<E>;","parent":{"krate":0,"index":594},"children":[],"decl_id":null,"docs":" Type of the non-uniform scaling to be applied.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":597},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":81713,"byte_end":81724,"line_start":39,"line_end":39,"column_start":10,"column_end":21},"name":"Translation","qualname":"::linear::transformation::AffineTransformation::Translation","value":"type Translation: Translation<E>;","parent":{"krate":0,"index":594},"children":[],"decl_id":null,"docs":" The type of the pure translation part of this affine transformation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":81906,"byte_end":81915,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"decompose","qualname":"::linear::transformation::AffineTransformation::decompose","value":"fn (&self) -> (Self::Translation, Self::Rotation, Self::NonUniformScaling, Self::Rotation)","parent":{"krate":0,"index":594},"children":[],"decl_id":null,"docs":" The group of affine transformations. They are decomposable into a rotation, a non-uniform\n scaling, a second rotation, and a translation (applied in that order).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":82182,"byte_end":82200,"line_start":52,"line_end":52,"column_start":8,"column_end":26},"name":"append_translation","qualname":"::linear::transformation::AffineTransformation::append_translation","value":"fn (&self, t: &Self::Translation) -> Self","parent":{"krate":0,"index":594},"children":[],"decl_id":null,"docs":" The group of affine transformations. They are decomposable into a rotation, a non-uniform\n scaling, a second rotation, and a translation (applied in that order).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":82300,"byte_end":82319,"line_start":55,"line_end":55,"column_start":8,"column_end":27},"name":"prepend_translation","qualname":"::linear::transformation::AffineTransformation::prepend_translation","value":"fn (&self, t: &Self::Translation) -> Self","parent":{"krate":0,"index":594},"children":[],"decl_id":null,"docs":" The group of affine transformations. They are decomposable into a rotation, a non-uniform\n scaling, a second rotation, and a translation (applied in that order).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":82414,"byte_end":82429,"line_start":58,"line_end":58,"column_start":8,"column_end":23},"name":"append_rotation","qualname":"::linear::transformation::AffineTransformation::append_rotation","value":"fn (&self, r: &Self::Rotation) -> Self","parent":{"krate":0,"index":594},"children":[],"decl_id":null,"docs":" The group of affine transformations. They are decomposable into a rotation, a non-uniform\n scaling, a second rotation, and a translation (applied in that order).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":82523,"byte_end":82539,"line_start":61,"line_end":61,"column_start":8,"column_end":24},"name":"prepend_rotation","qualname":"::linear::transformation::AffineTransformation::prepend_rotation","value":"fn (&self, r: &Self::Rotation) -> Self","parent":{"krate":0,"index":594},"children":[],"decl_id":null,"docs":" The group of affine transformations. They are decomposable into a rotation, a non-uniform\n scaling, a second rotation, and a translation (applied in that order).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":82637,"byte_end":82651,"line_start":64,"line_end":64,"column_start":8,"column_end":22},"name":"append_scaling","qualname":"::linear::transformation::AffineTransformation::append_scaling","value":"fn (&self, s: &Self::NonUniformScaling) -> Self","parent":{"krate":0,"index":594},"children":[],"decl_id":null,"docs":" The group of affine transformations. They are decomposable into a rotation, a non-uniform\n scaling, a second rotation, and a translation (applied in that order).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":82760,"byte_end":82775,"line_start":67,"line_end":67,"column_start":8,"column_end":23},"name":"prepend_scaling","qualname":"::linear::transformation::AffineTransformation::prepend_scaling","value":"fn (&self, s: &Self::NonUniformScaling) -> Self","parent":{"krate":0,"index":594},"children":[],"decl_id":null,"docs":" The group of affine transformations. They are decomposable into a rotation, a non-uniform\n scaling, a second rotation, and a translation (applied in that order).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":83094,"byte_end":83119,"line_start":75,"line_end":75,"column_start":8,"column_end":33},"name":"append_rotation_wrt_point","qualname":"::linear::transformation::AffineTransformation::append_rotation_wrt_point","value":"fn (&self, r: &Self::Rotation, p: &E) -> Option<Self>","parent":{"krate":0,"index":594},"children":[],"decl_id":null,"docs":" The group of affine transformations. They are decomposable into a rotation, a non-uniform\n scaling, a second rotation, and a translation (applied in that order).\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":606},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":83611,"byte_end":83621,"line_start":89,"line_end":89,"column_start":11,"column_end":21},"name":"Similarity","qualname":"::linear::transformation::Similarity","value":"Similarity<E: EuclideanSpace>:  AffineTransformation<E, NonUniformScaling = <Self as Similarity<E>>::Scaling>","parent":null,"children":[{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620}],"decl_id":null,"docs":" Subgroups of the similarity group `S(n)`, i.e., rotations, translations, and (signed) uniform scaling.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":607},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":83818,"byte_end":83825,"line_start":91,"line_end":91,"column_start":10,"column_end":17},"name":"Scaling","qualname":"::linear::transformation::Similarity::Scaling","value":"type Scaling: Scaling<E>;","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" The type of the pure (uniform) scaling part of this similarity transformation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":83967,"byte_end":83978,"line_start":97,"line_end":97,"column_start":8,"column_end":19},"name":"translation","qualname":"::linear::transformation::Similarity::translation","value":"fn (&self) -> Self::Translation","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Subgroups of the similarity group `S(n)`, i.e., rotations, translations, and (signed) uniform scaling.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":84089,"byte_end":84097,"line_start":100,"line_end":100,"column_start":8,"column_end":16},"name":"rotation","qualname":"::linear::transformation::Similarity::rotation","value":"fn (&self) -> Self::Rotation","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Subgroups of the similarity group `S(n)`, i.e., rotations, translations, and (signed) uniform scaling.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":84202,"byte_end":84209,"line_start":103,"line_end":103,"column_start":8,"column_end":15},"name":"scaling","qualname":"::linear::transformation::Similarity::scaling","value":"fn (&self) -> Self::Scaling","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Subgroups of the similarity group `S(n)`, i.e., rotations, translations, and (signed) uniform scaling.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":84370,"byte_end":84385,"line_start":110,"line_end":110,"column_start":8,"column_end":23},"name":"translate_point","qualname":"::linear::transformation::Similarity::translate_point","value":"fn (&self, pt: &E) -> E","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Subgroups of the similarity group `S(n)`, i.e., rotations, translations, and (signed) uniform scaling.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":84554,"byte_end":84566,"line_start":116,"line_end":116,"column_start":8,"column_end":20},"name":"rotate_point","qualname":"::linear::transformation::Similarity::rotate_point","value":"fn (&self, pt: &E) -> E","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Subgroups of the similarity group `S(n)`, i.e., rotations, translations, and (signed) uniform scaling.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":84729,"byte_end":84740,"line_start":122,"line_end":122,"column_start":8,"column_end":19},"name":"scale_point","qualname":"::linear::transformation::Similarity::scale_point","value":"fn (&self, pt: &E) -> E","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Subgroups of the similarity group `S(n)`, i.e., rotations, translations, and (signed) uniform scaling.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":84906,"byte_end":84919,"line_start":128,"line_end":128,"column_start":8,"column_end":21},"name":"rotate_vector","qualname":"::linear::transformation::Similarity::rotate_vector","value":"fn (&self, pt: &E::Coordinates) -> E::Coordinates","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Subgroups of the similarity group `S(n)`, i.e., rotations, translations, and (signed) uniform scaling.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":85110,"byte_end":85122,"line_start":134,"line_end":134,"column_start":8,"column_end":20},"name":"scale_vector","qualname":"::linear::transformation::Similarity::scale_vector","value":"fn (&self, pt: &E::Coordinates) -> E::Coordinates","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Subgroups of the similarity group `S(n)`, i.e., rotations, translations, and (signed) uniform scaling.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":85372,"byte_end":85395,"line_start":143,"line_end":143,"column_start":8,"column_end":31},"name":"inverse_translate_point","qualname":"::linear::transformation::Similarity::inverse_translate_point","value":"fn (&self, pt: &E) -> E","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Subgroups of the similarity group `S(n)`, i.e., rotations, translations, and (signed) uniform scaling.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":85580,"byte_end":85600,"line_start":149,"line_end":149,"column_start":8,"column_end":28},"name":"inverse_rotate_point","qualname":"::linear::transformation::Similarity::inverse_rotate_point","value":"fn (&self, pt: &E) -> E","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Subgroups of the similarity group `S(n)`, i.e., rotations, translations, and (signed) uniform scaling.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":85779,"byte_end":85798,"line_start":155,"line_end":155,"column_start":8,"column_end":27},"name":"inverse_scale_point","qualname":"::linear::transformation::Similarity::inverse_scale_point","value":"fn (&self, pt: &E) -> E","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Subgroups of the similarity group `S(n)`, i.e., rotations, translations, and (signed) uniform scaling.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":85980,"byte_end":86001,"line_start":161,"line_end":161,"column_start":8,"column_end":29},"name":"inverse_rotate_vector","qualname":"::linear::transformation::Similarity::inverse_rotate_vector","value":"fn (&self, pt: &E::Coordinates) -> E::Coordinates","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Subgroups of the similarity group `S(n)`, i.e., rotations, translations, and (signed) uniform scaling.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":86208,"byte_end":86228,"line_start":167,"line_end":167,"column_start":8,"column_end":28},"name":"inverse_scale_vector","qualname":"::linear::transformation::Similarity::inverse_scale_vector","value":"fn (&self, pt: &E::Coordinates) -> E::Coordinates","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Subgroups of the similarity group `S(n)`, i.e., rotations, translations, and (signed) uniform scaling.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":621},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":86439,"byte_end":86447,"line_start":173,"line_end":173,"column_start":11,"column_end":19},"name":"Isometry","qualname":"::linear::transformation::Isometry","value":"Isometry<E: EuclideanSpace>:  Similarity<E, Scaling = Id>","parent":null,"children":[],"decl_id":null,"docs":" Subgroups of the isometry group `E(n)`, i.e., rotations, reflexions, and translations.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":622},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":86613,"byte_end":86627,"line_start":177,"line_end":177,"column_start":11,"column_end":25},"name":"DirectIsometry","qualname":"::linear::transformation::DirectIsometry","value":"DirectIsometry<E: EuclideanSpace>:  Isometry<E>","parent":null,"children":[],"decl_id":null,"docs":" Subgroups of the orientation-preserving isometry group `SE(n)`, i.e., rotations and translations.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":623},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":86740,"byte_end":86764,"line_start":181,"line_end":181,"column_start":11,"column_end":35},"name":"OrthogonalTransformation","qualname":"::linear::transformation::OrthogonalTransformation","value":"OrthogonalTransformation<E: EuclideanSpace>:  Isometry<E, Translation = Id>","parent":null,"children":[],"decl_id":null,"docs":" Subgroups of the n-dimensional rotations and scaling `O(n)`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":624},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":86883,"byte_end":86890,"line_start":185,"line_end":185,"column_start":11,"column_end":18},"name":"Scaling","qualname":"::linear::transformation::Scaling","value":"Scaling<E: EuclideanSpace>:  AffineTransformation<E, NonUniformScaling = Self, Translation = Id, Rotation\n= Id> + SubsetOf<E::Real>","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628}],"decl_id":null,"docs":" Subgroups of the (signed) uniform scaling group.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":87115,"byte_end":87122,"line_start":188,"line_end":188,"column_start":8,"column_end":15},"name":"to_real","qualname":"::linear::transformation::Scaling::to_real","value":"fn (&self) -> E::Real","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":" Subgroups of the (signed) uniform scaling group.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":87379,"byte_end":87388,"line_start":195,"line_end":195,"column_start":8,"column_end":17},"name":"from_real","qualname":"::linear::transformation::Scaling::from_real","value":"fn (r: E::Real) -> Option<Self>","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":" Subgroups of the (signed) uniform scaling group.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":87650,"byte_end":87654,"line_start":202,"line_end":202,"column_start":8,"column_end":12},"name":"powf","qualname":"::linear::transformation::Scaling::powf","value":"fn (&self, n: E::Real) -> Option<Self>","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":" Subgroups of the (signed) uniform scaling group.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":87891,"byte_end":87904,"line_start":209,"line_end":209,"column_start":8,"column_end":21},"name":"scale_between","qualname":"::linear::transformation::Scaling::scale_between","value":"fn (a: &E::Coordinates, b: &E::Coordinates) -> Option<Self>","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":" Subgroups of the (signed) uniform scaling group.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":629},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":88095,"byte_end":88106,"line_start":215,"line_end":215,"column_start":11,"column_end":22},"name":"Translation","qualname":"::linear::transformation::Translation","value":"Translation<E: EuclideanSpace>:  DirectIsometry<E, Translation = Self, Rotation = Id>","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633}],"decl_id":null,"docs":" Subgroups of the n-dimensional translation group `T(n)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":88609,"byte_end":88618,"line_start":221,"line_end":221,"column_start":8,"column_end":17},"name":"to_vector","qualname":"::linear::transformation::Translation::to_vector","value":"fn (&self) -> E::Coordinates","parent":{"krate":0,"index":629},"children":[],"decl_id":null,"docs":" Subgroups of the n-dimensional translation group `T(n)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":88835,"byte_end":88846,"line_start":225,"line_end":225,"column_start":8,"column_end":19},"name":"from_vector","qualname":"::linear::transformation::Translation::from_vector","value":"fn (v: E::Coordinates) -> Option<Self>","parent":{"krate":0,"index":629},"children":[],"decl_id":null,"docs":" Subgroups of the n-dimensional translation group `T(n)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":89077,"byte_end":89081,"line_start":230,"line_end":230,"column_start":8,"column_end":12},"name":"powf","qualname":"::linear::transformation::Translation::powf","value":"fn (&self, n: E::Real) -> Option<Self>","parent":{"krate":0,"index":629},"children":[],"decl_id":null,"docs":" Subgroups of the n-dimensional translation group `T(n)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":89295,"byte_end":89314,"line_start":236,"line_end":236,"column_start":8,"column_end":27},"name":"translation_between","qualname":"::linear::transformation::Translation::translation_between","value":"fn (a: &E, b: &E) -> Option<Self>","parent":{"krate":0,"index":629},"children":[],"decl_id":null,"docs":" Subgroups of the n-dimensional translation group `T(n)`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":634},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":89474,"byte_end":89482,"line_start":242,"line_end":242,"column_start":11,"column_end":19},"name":"Rotation","qualname":"::linear::transformation::Rotation","value":"Rotation<E: EuclideanSpace>:  OrthogonalTransformation<E, Rotation = Self> + DirectIsometry<E, Rotation =\nSelf>","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637}],"decl_id":null,"docs":" Subgroups of the n-dimensional rotation group `SO(n)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":89745,"byte_end":89749,"line_start":245,"line_end":245,"column_start":8,"column_end":12},"name":"powf","qualname":"::linear::transformation::Rotation::powf","value":"fn (&self, n: E::Real) -> Option<Self>","parent":{"krate":0,"index":634},"children":[],"decl_id":null,"docs":" Subgroups of the n-dimensional rotation group `SO(n)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":90115,"byte_end":90131,"line_start":251,"line_end":251,"column_start":8,"column_end":24},"name":"rotation_between","qualname":"::linear::transformation::Rotation::rotation_between","value":"fn (a: &E::Coordinates, b: &E::Coordinates) -> Option<Self>","parent":{"krate":0,"index":634},"children":[],"decl_id":null,"docs":" Subgroups of the n-dimensional rotation group `SO(n)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":90441,"byte_end":90464,"line_start":258,"line_end":258,"column_start":8,"column_end":31},"name":"scaled_rotation_between","qualname":"::linear::transformation::Rotation::scaled_rotation_between","value":"fn (a: &E::Coordinates, b: &E::Coordinates, s: E::Real) -> Option<Self>","parent":{"krate":0,"index":634},"children":[],"decl_id":null,"docs":" Subgroups of the n-dimensional rotation group `SO(n)`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":672},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":93638,"byte_end":93644,"line_start":7,"line_end":7,"column_start":11,"column_end":17},"name":"Matrix","qualname":"::linear::matrix::Matrix","value":"Matrix:  Sized + Clone + Mul<<Self as Matrix>::Row, Output = <Self as Matrix>::Column>","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683}],"decl_id":null,"docs":" The space of all matrices.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":673},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":93783,"byte_end":93788,"line_start":10,"line_end":10,"column_start":10,"column_end":15},"name":"Field","qualname":"::linear::matrix::Matrix::Field","value":"type Field: Field;","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" The underlying field.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":674},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":93848,"byte_end":93851,"line_start":13,"line_end":13,"column_start":10,"column_end":13},"name":"Row","qualname":"::linear::matrix::Matrix::Row","value":"type Row: FiniteDimVectorSpace<Field = Self::Field>;","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" The type of rows of this matrix.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":675},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":93950,"byte_end":93956,"line_start":16,"line_end":16,"column_start":10,"column_end":16},"name":"Column","qualname":"::linear::matrix::Matrix::Column","value":"type Column: FiniteDimVectorSpace<Field = Self::Field>;","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" The type of columns of this matrix.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":676},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":94054,"byte_end":94063,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"name":"Transpose","qualname":"::linear::matrix::Matrix::Transpose","value":"type Transpose: Matrix<Field = Self::Field, Row = Self::Column, Column = Self::Row>;","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" The type of the transposed matrix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":94185,"byte_end":94190,"line_start":22,"line_end":22,"column_start":8,"column_end":13},"name":"nrows","qualname":"::linear::matrix::Matrix::nrows","value":"fn (&self) -> usize","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" The space of all matrices.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":94262,"byte_end":94270,"line_start":25,"line_end":25,"column_start":8,"column_end":16},"name":"ncolumns","qualname":"::linear::matrix::Matrix::ncolumns","value":"fn (&self) -> usize","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" The space of all matrices.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":94333,"byte_end":94336,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"row","qualname":"::linear::matrix::Matrix::row","value":"fn (&self, i: usize) -> Self::Row","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" The space of all matrices.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":94416,"byte_end":94422,"line_start":31,"line_end":31,"column_start":8,"column_end":14},"name":"column","qualname":"::linear::matrix::Matrix::column","value":"fn (&self, i: usize) -> Self::Column","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" The space of all matrices.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":94564,"byte_end":94577,"line_start":34,"line_end":34,"column_start":15,"column_end":28},"name":"get_unchecked","qualname":"::linear::matrix::Matrix::get_unchecked","value":"fn (&self, i: usize, j: usize) -> Self::Field","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" The space of all matrices.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":94698,"byte_end":94701,"line_start":37,"line_end":37,"column_start":8,"column_end":11},"name":"get","qualname":"::linear::matrix::Matrix::get","value":"fn (&self, i: usize, j: usize) -> Self::Field","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" The space of all matrices.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":94936,"byte_end":94945,"line_start":44,"line_end":44,"column_start":8,"column_end":17},"name":"transpose","qualname":"::linear::matrix::Matrix::transpose","value":"fn (&self) -> Self::Transpose","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" The space of all matrices.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":684},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":95089,"byte_end":95098,"line_start":48,"line_end":48,"column_start":11,"column_end":20},"name":"MatrixMut","qualname":"::linear::matrix::MatrixMut","value":"MatrixMut:  Matrix","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690}],"decl_id":null,"docs":" The space of all matrices that are stable under modifications of its components, rows and columns.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":95172,"byte_end":95179,"line_start":51,"line_end":51,"column_start":8,"column_end":15},"name":"set_row","qualname":"::linear::matrix::MatrixMut::set_row","value":"fn (&self, i: usize, row: &Self::Row) -> Self","parent":{"krate":0,"index":684},"children":[],"decl_id":null,"docs":" The space of all matrices that are stable under modifications of its components, rows and columns.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":95370,"byte_end":95381,"line_start":58,"line_end":58,"column_start":8,"column_end":19},"name":"set_row_mut","qualname":"::linear::matrix::MatrixMut::set_row_mut","value":"fn (&mut self, i: usize, row: &Self::Row) -> ()","parent":{"krate":0,"index":684},"children":[],"decl_id":null,"docs":" The space of all matrices that are stable under modifications of its components, rows and columns.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":95485,"byte_end":95495,"line_start":62,"line_end":62,"column_start":8,"column_end":18},"name":"set_column","qualname":"::linear::matrix::MatrixMut::set_column","value":"fn (&self, i: usize, col: &Self::Column) -> Self","parent":{"krate":0,"index":684},"children":[],"decl_id":null,"docs":" The space of all matrices that are stable under modifications of its components, rows and columns.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":95692,"byte_end":95706,"line_start":69,"line_end":69,"column_start":8,"column_end":22},"name":"set_column_mut","qualname":"::linear::matrix::MatrixMut::set_column_mut","value":"fn (&mut self, i: usize, col: &Self::Column) -> ()","parent":{"krate":0,"index":684},"children":[],"decl_id":null,"docs":" The space of all matrices that are stable under modifications of its components, rows and columns.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":95856,"byte_end":95869,"line_start":72,"line_end":72,"column_start":15,"column_end":28},"name":"set_unchecked","qualname":"::linear::matrix::MatrixMut::set_unchecked","value":"fn (&mut self, i: usize, j: usize, val: Self::Field) -> ()","parent":{"krate":0,"index":684},"children":[],"decl_id":null,"docs":" The space of all matrices that are stable under modifications of its components, rows and columns.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":95997,"byte_end":96000,"line_start":75,"line_end":75,"column_start":8,"column_end":11},"name":"set","qualname":"::linear::matrix::MatrixMut::set","value":"fn (&mut self, i: usize, j: usize, val: Self::Field) -> ()","parent":{"krate":0,"index":684},"children":[],"decl_id":null,"docs":" The space of all matrices that are stable under modifications of its components, rows and columns.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":691},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":96290,"byte_end":96302,"line_start":83,"line_end":83,"column_start":11,"column_end":23},"name":"SquareMatrix","qualname":"::linear::matrix::SquareMatrix","value":"SquareMatrix:  Matrix<Row = <Self as SquareMatrix>::Vector, Column =\n<Self as SquareMatrix>::Vector, Transpose = Self> + MultiplicativeMonoid","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697}],"decl_id":null,"docs":" The monoid of all square matrices, including non-inversible ones.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":692},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":96552,"byte_end":96558,"line_start":90,"line_end":90,"column_start":10,"column_end":16},"name":"Vector","qualname":"::linear::matrix::SquareMatrix::Vector","value":"type Vector: FiniteDimVectorSpace<Field = Self::Field>;","parent":{"krate":0,"index":691},"children":[],"decl_id":null,"docs":" The type of rows, column, and diagonal of this matrix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":96648,"byte_end":96656,"line_start":93,"line_end":93,"column_start":8,"column_end":16},"name":"diagonal","qualname":"::linear::matrix::SquareMatrix::diagonal","value":"fn (&self) -> Self::Vector","parent":{"krate":0,"index":691},"children":[],"decl_id":null,"docs":" The monoid of all square matrices, including non-inversible ones.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":96729,"byte_end":96740,"line_start":96,"line_end":96,"column_start":8,"column_end":19},"name":"determinant","qualname":"::linear::matrix::SquareMatrix::determinant","value":"fn (&self) -> Self::Field","parent":{"krate":0,"index":691},"children":[],"decl_id":null,"docs":" The monoid of all square matrices, including non-inversible ones.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":96881,"byte_end":96892,"line_start":101,"line_end":101,"column_start":8,"column_end":19},"name":"try_inverse","qualname":"::linear::matrix::SquareMatrix::try_inverse","value":"fn (&self) -> Option<Self>","parent":{"krate":0,"index":691},"children":[],"decl_id":null,"docs":" The monoid of all square matrices, including non-inversible ones.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":96992,"byte_end":97001,"line_start":105,"line_end":105,"column_start":8,"column_end":17},"name":"dimension","qualname":"::linear::matrix::SquareMatrix::dimension","value":"fn (&self) -> usize","parent":{"krate":0,"index":691},"children":[],"decl_id":null,"docs":" The monoid of all square matrices, including non-inversible ones.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":97101,"byte_end":97114,"line_start":111,"line_end":111,"column_start":8,"column_end":21},"name":"transpose_mut","qualname":"::linear::matrix::SquareMatrix::transpose_mut","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":691},"children":[],"decl_id":null,"docs":" The monoid of all square matrices, including non-inversible ones.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":698},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":97278,"byte_end":97293,"line_start":117,"line_end":117,"column_start":11,"column_end":26},"name":"SquareMatrixMut","qualname":"::linear::matrix::SquareMatrixMut","value":"SquareMatrixMut:  SquareMatrix + MatrixMut<Row = <Self as SquareMatrix>::Vector, Column =\n<Self as SquareMatrix>::Vector, Transpose = Self>","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701}],"decl_id":null,"docs":" The monoid of all mutable square matrices that are stable under modification of its diagonal.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":97578,"byte_end":97591,"line_start":122,"line_end":122,"column_start":8,"column_end":21},"name":"from_diagonal","qualname":"::linear::matrix::SquareMatrixMut::from_diagonal","value":"fn (diag: &Self::Vector) -> Self","parent":{"krate":0,"index":698},"children":[],"decl_id":null,"docs":" The monoid of all mutable square matrices that are stable under modification of its diagonal.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":97678,"byte_end":97690,"line_start":126,"line_end":126,"column_start":8,"column_end":20},"name":"set_diagonal","qualname":"::linear::matrix::SquareMatrixMut::set_diagonal","value":"fn (&self, diag: &Self::Vector) -> Self","parent":{"krate":0,"index":698},"children":[],"decl_id":null,"docs":" The monoid of all mutable square matrices that are stable under modification of its diagonal.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":97870,"byte_end":97886,"line_start":133,"line_end":133,"column_start":8,"column_end":24},"name":"set_diagonal_mut","qualname":"::linear::matrix::SquareMatrixMut::set_diagonal_mut","value":"fn (&mut self, diag: &Self::Vector) -> ()","parent":{"krate":0,"index":698},"children":[],"decl_id":null,"docs":" The monoid of all mutable square matrices that are stable under modification of its diagonal.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":702},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":98040,"byte_end":98062,"line_start":138,"line_end":138,"column_start":11,"column_end":33},"name":"InversibleSquareMatrix","qualname":"::linear::matrix::InversibleSquareMatrix","value":"InversibleSquareMatrix:  SquareMatrix + MultiplicativeGroup","parent":null,"children":[],"decl_id":null,"docs":" The group of inversible matrix. Commonly known as the General Linear group `GL(n)` by\n algebraists.\n","sig":null,"attributes":[]}],"impls":[],"refs":[{"kind":"Mod","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":932,"byte_end":939,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":10}},{"kind":"Mod","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,46,114,115],"byte_start":12219,"byte_end":12226,"line_start":188,"line_end":188,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":435}},{"kind":"Mod","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":949,"byte_end":955,"line_start":33,"line_end":33,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":491}}],"macro_refs":[],"relations":[{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":12555,"byte_end":12560,"line_start":14,"line_end":14,"column_start":39,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":841},"to":{"krate":0,"index":78}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":12563,"byte_end":12568,"line_start":14,"line_end":14,"column_start":47,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":1213},"to":{"krate":0,"index":78}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":13047,"byte_end":13056,"line_start":33,"line_end":33,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":1119},"to":{"krate":0,"index":81}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":13059,"byte_end":13072,"line_start":33,"line_end":33,"column_start":19,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":78},"to":{"krate":0,"index":81}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":13078,"byte_end":13085,"line_start":33,"line_end":33,"column_start":38,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":260},"to":{"krate":0,"index":81}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":14899,"byte_end":14908,"line_start":97,"line_end":97,"column_start":44,"column_end":53},"kind":"SuperTrait","from":{"krate":2,"index":1119},"to":{"krate":0,"index":85}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":14911,"byte_end":14924,"line_start":97,"line_end":97,"column_start":56,"column_end":69},"kind":"SuperTrait","from":{"krate":0,"index":78},"to":{"krate":0,"index":85}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":16602,"byte_end":16620,"line_start":151,"line_end":151,"column_start":7,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":81},"to":{"krate":0,"index":89}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":16630,"byte_end":16638,"line_start":152,"line_end":152,"column_start":7,"column_end":15},"kind":"SuperTrait","from":{"krate":0,"index":176},"to":{"krate":0,"index":89}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":17898,"byte_end":17915,"line_start":201,"line_end":201,"column_start":7,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":85},"to":{"krate":0,"index":91}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":17925,"byte_end":17933,"line_start":202,"line_end":202,"column_start":7,"column_end":15},"kind":"SuperTrait","from":{"krate":0,"index":176},"to":{"krate":0,"index":91}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":19666,"byte_end":19678,"line_start":258,"line_end":258,"column_start":7,"column_end":19},"kind":"SuperTrait","from":{"krate":0,"index":89},"to":{"krate":0,"index":95}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":19684,"byte_end":19698,"line_start":258,"line_end":258,"column_start":25,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":91},"to":{"krate":0,"index":95}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":21059,"byte_end":21072,"line_start":308,"line_end":308,"column_start":7,"column_end":20},"kind":"SuperTrait","from":{"krate":0,"index":95},"to":{"krate":0,"index":97}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23526,"byte_end":23533,"line_start":394,"line_end":394,"column_start":62,"column_end":69},"kind":"Impl","from":{"krate":12,"index":152},"to":{"krate":0,"index":78}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23772,"byte_end":23779,"line_start":404,"line_end":404,"column_start":56,"column_end":63},"kind":"Impl","from":{"krate":12,"index":152},"to":{"krate":0,"index":78}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23906,"byte_end":23913,"line_start":411,"line_end":411,"column_start":36,"column_end":43},"kind":"Impl","from":{"krate":12,"index":152},"to":{"krate":0,"index":85}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23906,"byte_end":23913,"line_start":411,"line_end":411,"column_start":36,"column_end":43},"kind":"Impl","from":{"krate":12,"index":152},"to":{"krate":0,"index":91}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23906,"byte_end":23913,"line_start":411,"line_end":411,"column_start":36,"column_end":43},"kind":"Impl","from":{"krate":12,"index":152},"to":{"krate":0,"index":81}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23906,"byte_end":23913,"line_start":411,"line_end":411,"column_start":36,"column_end":43},"kind":"Impl","from":{"krate":12,"index":152},"to":{"krate":0,"index":89}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23906,"byte_end":23913,"line_start":411,"line_end":411,"column_start":36,"column_end":43},"kind":"Impl","from":{"krate":12,"index":152},"to":{"krate":0,"index":95}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23906,"byte_end":23913,"line_start":411,"line_end":411,"column_start":36,"column_end":43},"kind":"Impl","from":{"krate":12,"index":152},"to":{"krate":0,"index":97}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23981,"byte_end":23988,"line_start":412,"line_end":412,"column_start":30,"column_end":37},"kind":"Impl","from":{"krate":12,"index":152},"to":{"krate":0,"index":85}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23981,"byte_end":23988,"line_start":412,"line_end":412,"column_start":30,"column_end":37},"kind":"Impl","from":{"krate":12,"index":152},"to":{"krate":0,"index":91}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23981,"byte_end":23988,"line_start":412,"line_end":412,"column_start":30,"column_end":37},"kind":"Impl","from":{"krate":12,"index":152},"to":{"krate":0,"index":81}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23981,"byte_end":23988,"line_start":412,"line_end":412,"column_start":30,"column_end":37},"kind":"Impl","from":{"krate":12,"index":152},"to":{"krate":0,"index":89}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23981,"byte_end":23988,"line_start":412,"line_end":412,"column_start":30,"column_end":37},"kind":"Impl","from":{"krate":12,"index":152},"to":{"krate":0,"index":95}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,110,101,95,111,112,101,114,97,116,111,114,46,114,115],"byte_start":23981,"byte_end":23988,"line_start":412,"line_end":412,"column_start":30,"column_end":37},"kind":"Impl","from":{"krate":12,"index":152},"to":{"krate":0,"index":97}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":24648,"byte_end":24668,"line_start":15,"line_end":15,"column_start":5,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":97},"to":{"krate":0,"index":118}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":24674,"byte_end":24688,"line_start":15,"line_end":15,"column_start":31,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":91},"to":{"krate":0,"index":118}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":27682,"byte_end":27694,"line_start":107,"line_end":107,"column_start":91,"column_end":103},"kind":"SuperTrait","from":{"krate":0,"index":118},"to":{"krate":0,"index":122}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":30191,"byte_end":30214,"line_start":185,"line_end":185,"column_start":7,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":122},"to":{"krate":0,"index":126}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":30227,"byte_end":30247,"line_start":186,"line_end":186,"column_start":7,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":97},"to":{"krate":0,"index":126}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":32522,"byte_end":32529,"line_start":259,"line_end":259,"column_start":88,"column_end":95},"kind":"Impl","from":{"krate":12,"index":152},"to":{"krate":0,"index":118}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":32624,"byte_end":32631,"line_start":260,"line_end":260,"column_start":88,"column_end":95},"kind":"Impl","from":{"krate":12,"index":152},"to":{"krate":0,"index":122}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,116,119,111,95,111,112,101,114,97,116,111,114,115,46,114,115],"byte_start":32726,"byte_end":32733,"line_start":261,"line_end":261,"column_start":88,"column_end":95},"kind":"Impl","from":{"krate":12,"index":152},"to":{"krate":0,"index":126}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,109,111,100,117,108,101,46,114,115],"byte_start":33681,"byte_end":33701,"line_start":24,"line_end":24,"column_start":28,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":97},"to":{"krate":0,"index":138}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":35116,"byte_end":35123,"line_start":38,"line_end":38,"column_start":52,"column_end":59},"kind":"Impl","from":{"krate":12,"index":152},"to":{"krate":0,"index":176}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":35319,"byte_end":35326,"line_start":48,"line_end":48,"column_start":51,"column_end":58},"kind":"Impl","from":{"krate":12,"index":152},"to":{"krate":0,"index":176}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":35907,"byte_end":35909,"line_start":68,"line_end":68,"column_start":19,"column_end":21},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":36085,"byte_end":36087,"line_start":78,"line_end":78,"column_start":28,"column_end":30},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":2,"index":843}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":36124,"byte_end":36126,"line_start":80,"line_end":80,"column_start":29,"column_end":31},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":2,"index":1213}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":36239,"byte_end":36241,"line_start":87,"line_end":87,"column_start":36,"column_end":38},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":2,"index":3473}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":36385,"byte_end":36387,"line_start":93,"line_end":93,"column_start":33,"column_end":35},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":2,"index":1119}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":36492,"byte_end":36494,"line_start":100,"line_end":100,"column_start":26,"column_end":28},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":2,"index":1122}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":36536,"byte_end":36538,"line_start":102,"line_end":102,"column_start":34,"column_end":36},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":2,"index":1146}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":36690,"byte_end":36692,"line_start":109,"line_end":109,"column_start":35,"column_end":37},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":0,"index":176}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":36799,"byte_end":36801,"line_start":116,"line_end":116,"column_start":32,"column_end":34},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":14,"index":12}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":37346,"byte_end":37348,"line_start":150,"line_end":150,"column_start":18,"column_end":20},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":2,"index":871}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":37451,"byte_end":37453,"line_start":158,"line_end":158,"column_start":24,"column_end":26},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":2,"index":897}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":37537,"byte_end":37539,"line_start":164,"line_end":164,"column_start":18,"column_end":20},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":2,"index":875}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":37642,"byte_end":37644,"line_start":172,"line_end":172,"column_start":24,"column_end":26},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":2,"index":900}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":37728,"byte_end":37730,"line_start":178,"line_end":178,"column_start":18,"column_end":20},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":2,"index":863}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":37833,"byte_end":37835,"line_start":186,"line_end":186,"column_start":24,"column_end":26},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":2,"index":891}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":37941,"byte_end":37943,"line_start":192,"line_end":192,"column_start":40,"column_end":42},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":0,"index":78}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":38066,"byte_end":38068,"line_start":199,"line_end":199,"column_start":34,"column_end":36},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":0,"index":260}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":38263,"byte_end":38265,"line_start":211,"line_end":211,"column_start":47,"column_end":49},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":0,"index":85}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":38319,"byte_end":38321,"line_start":212,"line_end":212,"column_start":47,"column_end":49},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":0,"index":81}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":38375,"byte_end":38377,"line_start":213,"line_end":213,"column_start":47,"column_end":49},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":0,"index":91}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":38431,"byte_end":38433,"line_start":214,"line_end":214,"column_start":47,"column_end":49},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":0,"index":89}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":38487,"byte_end":38489,"line_start":215,"line_end":215,"column_start":47,"column_end":49},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":0,"index":95}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":38543,"byte_end":38545,"line_start":216,"line_end":216,"column_start":47,"column_end":49},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":0,"index":97}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":38567,"byte_end":38569,"line_start":218,"line_end":218,"column_start":14,"column_end":16},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":11,"index":51}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":38648,"byte_end":38650,"line_start":225,"line_end":225,"column_start":15,"column_end":17},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":11,"index":44}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":38873,"byte_end":38875,"line_start":242,"line_end":242,"column_start":63,"column_end":65},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":0,"index":388}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":39177,"byte_end":39179,"line_start":259,"line_end":259,"column_start":39,"column_end":41},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":0,"index":374}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":39303,"byte_end":39305,"line_start":266,"line_end":266,"column_start":39,"column_end":41},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":0,"index":376}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,105,100,101,110,116,105,116,121,46,114,115],"byte_start":39421,"byte_end":39423,"line_start":273,"line_end":273,"column_start":31,"column_end":33},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":0,"index":378}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":39690,"byte_end":39694,"line_start":9,"line_end":9,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":843},"to":{"krate":0,"index":258}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":40003,"byte_end":40008,"line_start":17,"line_end":17,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":841},"to":{"krate":0,"index":260}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":40588,"byte_end":40596,"line_start":46,"line_end":46,"column_start":19,"column_end":27},"kind":"Impl","from":{"krate":0,"index":965},"to":{"krate":0,"index":258}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":40691,"byte_end":40705,"line_start":53,"line_end":53,"column_start":19,"column_end":33},"kind":"Impl","from":{"krate":0,"index":969},"to":{"krate":0,"index":258}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":40806,"byte_end":40822,"line_start":60,"line_end":60,"column_start":19,"column_end":35},"kind":"Impl","from":{"krate":0,"index":973},"to":{"krate":0,"index":258}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":41278,"byte_end":41285,"line_start":82,"line_end":82,"column_start":50,"column_end":57},"kind":"Impl","from":{"krate":12,"index":152},"to":{"krate":0,"index":260}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":41889,"byte_end":41896,"line_start":114,"line_end":114,"column_start":62,"column_end":69},"kind":"Impl","from":{"krate":12,"index":152},"to":{"krate":0,"index":260}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42088,"byte_end":42093,"line_start":122,"line_end":122,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":841},"to":{"krate":0,"index":278}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42096,"byte_end":42099,"line_start":122,"line_end":122,"column_start":44,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":863},"to":{"krate":0,"index":278}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42124,"byte_end":42133,"line_start":122,"line_end":122,"column_start":72,"column_end":81},"kind":"SuperTrait","from":{"krate":2,"index":891},"to":{"krate":0,"index":278}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42258,"byte_end":42263,"line_start":125,"line_end":125,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":841},"to":{"krate":0,"index":279}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42266,"byte_end":42269,"line_start":125,"line_end":125,"column_start":44,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":867},"to":{"krate":0,"index":279}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42294,"byte_end":42303,"line_start":125,"line_end":125,"column_start":72,"column_end":81},"kind":"SuperTrait","from":{"krate":2,"index":894},"to":{"krate":0,"index":279}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42428,"byte_end":42433,"line_start":128,"line_end":128,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":841},"to":{"krate":0,"index":280}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42436,"byte_end":42439,"line_start":128,"line_end":128,"column_start":44,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":871},"to":{"krate":0,"index":280}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42464,"byte_end":42473,"line_start":128,"line_end":128,"column_start":72,"column_end":81},"kind":"SuperTrait","from":{"krate":2,"index":897},"to":{"krate":0,"index":280}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42598,"byte_end":42603,"line_start":131,"line_end":131,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":841},"to":{"krate":0,"index":281}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42606,"byte_end":42609,"line_start":131,"line_end":131,"column_start":44,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":875},"to":{"krate":0,"index":281}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42634,"byte_end":42643,"line_start":131,"line_end":131,"column_start":72,"column_end":81},"kind":"SuperTrait","from":{"krate":2,"index":900},"to":{"krate":0,"index":281}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42739,"byte_end":42744,"line_start":134,"line_end":134,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":841},"to":{"krate":0,"index":282}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42747,"byte_end":42750,"line_start":134,"line_end":134,"column_start":30,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":885},"to":{"krate":0,"index":282}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42807,"byte_end":42808,"line_start":136,"line_end":136,"column_start":37,"column_end":38},"kind":"Impl","from":{"krate":0,"index":2147483720},"to":{"krate":0,"index":278}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42900,"byte_end":42901,"line_start":137,"line_end":137,"column_start":37,"column_end":38},"kind":"Impl","from":{"krate":0,"index":2147483722},"to":{"krate":0,"index":279}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":42993,"byte_end":42994,"line_start":138,"line_end":138,"column_start":37,"column_end":38},"kind":"Impl","from":{"krate":0,"index":2147483724},"to":{"krate":0,"index":280}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":43086,"byte_end":43087,"line_start":139,"line_end":139,"column_start":37,"column_end":38},"kind":"Impl","from":{"krate":0,"index":2147483726},"to":{"krate":0,"index":281}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,111,112,101,114,97,116,111,114,46,114,115],"byte_start":43165,"byte_end":43166,"line_start":140,"line_end":140,"column_start":23,"column_end":24},"kind":"Impl","from":{"krate":0,"index":2147483728},"to":{"krate":0,"index":282}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43873,"byte_end":43881,"line_start":19,"line_end":19,"column_start":17,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":388},"to":{"krate":0,"index":313}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43890,"byte_end":43900,"line_start":19,"line_end":19,"column_start":34,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":393},"to":{"krate":0,"index":313}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43908,"byte_end":43913,"line_start":19,"line_end":19,"column_start":52,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":1651},"to":{"krate":0,"index":313}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43916,"byte_end":43920,"line_start":19,"line_end":19,"column_start":60,"column_end":64},"kind":"SuperTrait","from":{"krate":2,"index":843},"to":{"krate":0,"index":313}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43923,"byte_end":43926,"line_start":19,"line_end":19,"column_start":67,"column_end":70},"kind":"SuperTrait","from":{"krate":11,"index":317},"to":{"krate":0,"index":313}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43929,"byte_end":43942,"line_start":19,"line_end":19,"column_start":73,"column_end":86},"kind":"SuperTrait","from":{"krate":11,"index":250},"to":{"krate":0,"index":313}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43961,"byte_end":43964,"line_start":20,"line_end":20,"column_start":17,"column_end":20},"kind":"SuperTrait","from":{"krate":2,"index":885},"to":{"krate":0,"index":313}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43982,"byte_end":43991,"line_start":20,"line_end":20,"column_start":38,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":891},"to":{"krate":0,"index":313}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":43994,"byte_end":44003,"line_start":20,"line_end":20,"column_start":50,"column_end":59},"kind":"SuperTrait","from":{"krate":2,"index":897},"to":{"krate":0,"index":313}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44006,"byte_end":44015,"line_start":20,"line_end":20,"column_start":62,"column_end":71},"kind":"SuperTrait","from":{"krate":2,"index":894},"to":{"krate":0,"index":313}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44018,"byte_end":44027,"line_start":20,"line_end":20,"column_start":74,"column_end":83},"kind":"SuperTrait","from":{"krate":2,"index":900},"to":{"krate":0,"index":313}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44046,"byte_end":44054,"line_start":21,"line_end":21,"column_start":17,"column_end":25},"kind":"SuperTrait","from":{"krate":14,"index":12},"to":{"krate":0,"index":313}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44073,"byte_end":44080,"line_start":21,"line_end":21,"column_start":44,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":378},"to":{"krate":0,"index":313}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44083,"byte_end":44092,"line_start":21,"line_end":21,"column_start":54,"column_end":63},"kind":"SuperTrait","from":{"krate":2,"index":1119},"to":{"krate":0,"index":313}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44095,"byte_end":44101,"line_start":21,"line_end":21,"column_start":66,"column_end":72},"kind":"SuperTrait","from":{"krate":11,"index":66},"to":{"krate":0,"index":313}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44120,"byte_end":44124,"line_start":22,"line_end":22,"column_start":17,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":837},"to":{"krate":0,"index":313}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44127,"byte_end":44131,"line_start":22,"line_end":22,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":844},"to":{"krate":0,"index":313}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44134,"byte_end":44137,"line_start":22,"line_end":22,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1280},"to":{"krate":0,"index":313}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44150,"byte_end":44155,"line_start":22,"line_end":22,"column_start":47,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":3471},"to":{"krate":0,"index":313}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44158,"byte_end":44165,"line_start":22,"line_end":22,"column_start":55,"column_end":62},"kind":"SuperTrait","from":{"krate":2,"index":3473},"to":{"krate":0,"index":313}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,114,101,97,108,46,114,115],"byte_start":44291,"byte_end":44298,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"kind":"SuperTrait","from":{"krate":11,"index":143},"to":{"krate":0,"index":313}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":52749,"byte_end":52754,"line_start":4,"line_end":4,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":841},"to":{"krate":0,"index":374}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":52965,"byte_end":52970,"line_start":10,"line_end":10,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":841},"to":{"krate":0,"index":376}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":53177,"byte_end":53192,"line_start":16,"line_end":16,"column_start":20,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":374},"to":{"krate":0,"index":378}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":53195,"byte_end":53210,"line_start":16,"line_end":16,"column_start":38,"column_end":53},"kind":"SuperTrait","from":{"krate":0,"index":376},"to":{"krate":0,"index":378}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,108,97,116,116,105,99,101,46,114,115],"byte_start":53213,"byte_end":53223,"line_start":16,"line_end":16,"column_start":56,"column_end":66},"kind":"SuperTrait","from":{"krate":2,"index":1146},"to":{"krate":0,"index":378}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":57576,"byte_end":57581,"line_start":22,"line_end":22,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":841},"to":{"krate":0,"index":388}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":59580,"byte_end":59585,"line_start":63,"line_end":63,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":841},"to":{"krate":0,"index":393}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":60418,"byte_end":60420,"line_start":87,"line_end":87,"column_start":47,"column_end":49},"kind":"Impl","from":{"krate":0,"index":2147483736},"to":{"krate":0,"index":393}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,115,117,98,115,101,116,46,114,115],"byte_start":62497,"byte_end":62504,"line_start":168,"line_end":168,"column_start":56,"column_end":63},"kind":"Impl","from":{"krate":12,"index":152},"to":{"krate":0,"index":388}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,115,112,101,99,105,97,108,105,122,101,100,46,114,115],"byte_start":66937,"byte_end":66951,"line_start":46,"line_end":46,"column_start":19,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":138},"to":{"krate":0,"index":433}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,115,112,101,99,105,97,108,105,122,101,100,46,114,115],"byte_start":67013,"byte_end":67033,"line_start":47,"line_end":47,"column_start":21,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":1631},"to":{"krate":0,"index":433}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":67786,"byte_end":67793,"line_start":22,"line_end":22,"column_start":30,"column_end":37},"kind":"Impl","from":{"krate":0,"index":1653},"to":{"krate":2,"index":843}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":67839,"byte_end":67846,"line_start":24,"line_end":24,"column_start":32,"column_end":39},"kind":"Impl","from":{"krate":0,"index":1653},"to":{"krate":2,"index":1213}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":67977,"byte_end":67984,"line_start":30,"line_end":30,"column_start":42,"column_end":49},"kind":"Impl","from":{"krate":0,"index":1653},"to":{"krate":2,"index":1146}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":68147,"byte_end":68154,"line_start":36,"line_end":36,"column_start":40,"column_end":47},"kind":"Impl","from":{"krate":0,"index":1653},"to":{"krate":2,"index":1119}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":68260,"byte_end":68267,"line_start":42,"line_end":42,"column_start":15,"column_end":22},"kind":"Impl","from":{"krate":0,"index":1653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":68487,"byte_end":68494,"line_start":52,"line_end":52,"column_start":56,"column_end":63},"kind":"Impl","from":{"krate":0,"index":1653},"to":{"krate":2,"index":3473}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":68640,"byte_end":68647,"line_start":58,"line_end":58,"column_start":38,"column_end":45},"kind":"Impl","from":{"krate":0,"index":1653},"to":{"krate":14,"index":12}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":69377,"byte_end":69384,"line_start":87,"line_end":87,"column_start":51,"column_end":58},"kind":"Impl","from":{"krate":0,"index":1653},"to":{"krate":2,"index":863}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":69589,"byte_end":69596,"line_start":98,"line_end":98,"column_start":33,"column_end":40},"kind":"Impl","from":{"krate":0,"index":1653},"to":{"krate":2,"index":885}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":69820,"byte_end":69827,"line_start":110,"line_end":110,"column_start":51,"column_end":58},"kind":"Impl","from":{"krate":0,"index":1653},"to":{"krate":2,"index":867}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":70026,"byte_end":70033,"line_start":121,"line_end":121,"column_start":51,"column_end":58},"kind":"Impl","from":{"krate":0,"index":1653},"to":{"krate":2,"index":871}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":70245,"byte_end":70252,"line_start":132,"line_end":132,"column_start":40,"column_end":47},"kind":"Impl","from":{"krate":0,"index":1653},"to":{"krate":0,"index":260}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,103,101,110,101,114,97,108,47,119,114,97,112,112,101,114,46,114,115],"byte_start":70441,"byte_end":70448,"line_start":140,"line_end":140,"column_start":51,"column_end":58},"kind":"Impl","from":{"krate":0,"index":1653},"to":{"krate":2,"index":875}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":71489,"byte_end":71495,"line_start":7,"line_end":7,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":433},"to":{"krate":0,"index":538}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":71719,"byte_end":71730,"line_start":14,"line_end":14,"column_start":24,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":538},"to":{"krate":0,"index":540}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":72770,"byte_end":72781,"line_start":41,"line_end":41,"column_start":23,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":540},"to":{"krate":0,"index":547}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":73739,"byte_end":73750,"line_start":75,"line_end":75,"column_start":33,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":538},"to":{"krate":0,"index":551}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":73785,"byte_end":73790,"line_start":76,"line_end":76,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":998},"to":{"krate":0,"index":551}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":73871,"byte_end":73879,"line_start":77,"line_end":77,"column_start":33,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":1001},"to":{"krate":0,"index":551}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":75022,"byte_end":75032,"line_start":107,"line_end":107,"column_start":32,"column_end":42},"kind":"SuperTrait","from":{"krate":0,"index":547},"to":{"krate":0,"index":558}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":75035,"byte_end":75055,"line_start":107,"line_end":107,"column_start":45,"column_end":65},"kind":"SuperTrait","from":{"krate":0,"index":551},"to":{"krate":0,"index":558}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":75927,"byte_end":75932,"line_start":123,"line_end":123,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":841},"to":{"krate":0,"index":561}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":75935,"byte_end":75940,"line_start":123,"line_end":123,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1213},"to":{"krate":0,"index":561}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":75943,"byte_end":75952,"line_start":123,"line_end":123,"column_start":40,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":1119},"to":{"krate":0,"index":561}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":75978,"byte_end":75981,"line_start":124,"line_end":124,"column_start":24,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":867},"to":{"krate":0,"index":561}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":76773,"byte_end":76784,"line_start":146,"line_end":146,"column_start":27,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":561},"to":{"krate":0,"index":565}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,118,101,99,116,111,114,46,114,115],"byte_start":77180,"byte_end":77183,"line_start":152,"line_end":152,"column_start":27,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":885},"to":{"krate":0,"index":565}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":80081,"byte_end":80101,"line_start":8,"line_end":8,"column_start":46,"column_end":66},"kind":"SuperTrait","from":{"krate":0,"index":1641},"to":{"krate":0,"index":588}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":80676,"byte_end":80695,"line_start":20,"line_end":20,"column_start":56,"column_end":75},"kind":"SuperTrait","from":{"krate":0,"index":1643},"to":{"krate":0,"index":591}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":80698,"byte_end":80712,"line_start":20,"line_end":20,"column_start":78,"column_end":92},"kind":"SuperTrait","from":{"krate":0,"index":588},"to":{"krate":0,"index":591}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":81407,"byte_end":81431,"line_start":33,"line_end":33,"column_start":52,"column_end":76},"kind":"SuperTrait","from":{"krate":0,"index":591},"to":{"krate":0,"index":594}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":83642,"byte_end":83662,"line_start":89,"line_end":89,"column_start":42,"column_end":62},"kind":"SuperTrait","from":{"krate":0,"index":594},"to":{"krate":0,"index":606}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":86468,"byte_end":86478,"line_start":173,"line_end":173,"column_start":40,"column_end":50},"kind":"SuperTrait","from":{"krate":0,"index":606},"to":{"krate":0,"index":621}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":86648,"byte_end":86656,"line_start":177,"line_end":177,"column_start":46,"column_end":54},"kind":"SuperTrait","from":{"krate":0,"index":621},"to":{"krate":0,"index":622}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":86785,"byte_end":86793,"line_start":181,"line_end":181,"column_start":56,"column_end":64},"kind":"SuperTrait","from":{"krate":0,"index":621},"to":{"krate":0,"index":623}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":86911,"byte_end":86931,"line_start":185,"line_end":185,"column_start":39,"column_end":59},"kind":"SuperTrait","from":{"krate":0,"index":594},"to":{"krate":0,"index":624}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":86996,"byte_end":87004,"line_start":185,"line_end":185,"column_start":124,"column_end":132},"kind":"SuperTrait","from":{"krate":0,"index":388},"to":{"krate":0,"index":624}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":88127,"byte_end":88141,"line_start":215,"line_end":215,"column_start":43,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":622},"to":{"krate":0,"index":629}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":89503,"byte_end":89527,"line_start":242,"line_end":242,"column_start":40,"column_end":64},"kind":"SuperTrait","from":{"krate":0,"index":623},"to":{"krate":0,"index":634}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":89550,"byte_end":89564,"line_start":242,"line_end":242,"column_start":87,"column_end":101},"kind":"SuperTrait","from":{"krate":0,"index":622},"to":{"krate":0,"index":634}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":90748,"byte_end":90749,"line_start":272,"line_end":272,"column_start":34,"column_end":35},"kind":"Impl","from":{"krate":0,"index":2147483790},"to":{"krate":0,"index":588}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":91121,"byte_end":91122,"line_start":288,"line_end":288,"column_start":44,"column_end":45},"kind":"Impl","from":{"krate":0,"index":2147483792},"to":{"krate":0,"index":591}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":91604,"byte_end":91605,"line_start":306,"line_end":306,"column_start":40,"column_end":41},"kind":"Impl","from":{"krate":0,"index":2147483794},"to":{"krate":0,"index":594}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":92573,"byte_end":92574,"line_start":350,"line_end":350,"column_start":27,"column_end":28},"kind":"Impl","from":{"krate":0,"index":2147483796},"to":{"krate":0,"index":624}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,46,114,115],"byte_start":93118,"byte_end":93119,"line_start":375,"line_end":375,"column_start":30,"column_end":31},"kind":"Impl","from":{"krate":0,"index":2147483798},"to":{"krate":0,"index":606}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":93646,"byte_end":93651,"line_start":7,"line_end":7,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":841},"to":{"krate":0,"index":672}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":93654,"byte_end":93659,"line_start":7,"line_end":7,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1213},"to":{"krate":0,"index":672}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":95100,"byte_end":95106,"line_start":48,"line_end":48,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":672},"to":{"krate":0,"index":684}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":96309,"byte_end":96315,"line_start":84,"line_end":84,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":672},"to":{"krate":0,"index":691}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":96456,"byte_end":96476,"line_start":87,"line_end":87,"column_start":7,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":1641},"to":{"krate":0,"index":691}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":97295,"byte_end":97307,"line_start":117,"line_end":117,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":691},"to":{"krate":0,"index":698}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":97337,"byte_end":97346,"line_start":118,"line_end":118,"column_start":28,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":684},"to":{"krate":0,"index":698}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":98064,"byte_end":98076,"line_start":138,"line_end":138,"column_start":35,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":691},"to":{"krate":0,"index":702}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,109,97,116,114,105,120,46,114,115],"byte_start":98079,"byte_end":98098,"line_start":138,"line_end":138,"column_start":50,"column_end":69},"kind":"SuperTrait","from":{"krate":0,"index":1643},"to":{"krate":0,"index":702}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":98563,"byte_end":98565,"line_start":11,"line_end":11,"column_start":47,"column_end":49},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":0,"index":588}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":98821,"byte_end":98823,"line_start":23,"line_end":23,"column_start":57,"column_end":59},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":0,"index":591}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":99091,"byte_end":99093,"line_start":35,"line_end":35,"column_start":53,"column_end":55},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":0,"index":594}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":99961,"byte_end":99963,"line_start":76,"line_end":76,"column_start":43,"column_end":45},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":0,"index":606}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":100289,"byte_end":100291,"line_start":95,"line_end":95,"column_start":47,"column_end":49},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":0,"index":624}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":100342,"byte_end":100344,"line_start":96,"line_end":96,"column_start":47,"column_end":49},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":0,"index":621}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":100395,"byte_end":100397,"line_start":97,"line_end":97,"column_start":47,"column_end":49},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":0,"index":622}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":100458,"byte_end":100460,"line_start":98,"line_end":98,"column_start":57,"column_end":59},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":0,"index":623}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":100507,"byte_end":100509,"line_start":101,"line_end":101,"column_start":41,"column_end":43},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":0,"index":634}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,108,103,97,45,48,46,53,46,50,47,115,114,99,47,108,105,110,101,97,114,47,105,100,46,114,115],"byte_start":101041,"byte_end":101043,"line_start":123,"line_end":123,"column_start":44,"column_end":46},"kind":"Impl","from":{"krate":0,"index":962},"to":{"krate":0,"index":629}}]}