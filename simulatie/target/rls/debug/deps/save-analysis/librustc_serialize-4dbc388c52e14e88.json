{"config":{"output_file":null,"full_docs":false,"pub_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"rustc_serialize","disambiguator":[10214971898540045993,15973922386253681999]},"crate_root":".cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src","external_crates":[{"file_name":"/home/alfonso/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src/lib.rs","num":8,"id":{"name":"compiler_builtins","disambiguator":[8738806026161230330,3781608880844894588]}},{"file_name":"/home/alfonso/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[10336128633598011868,10340831318577393010]}},{"file_name":"/home/alfonso/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[3581102226906677031,3276304826724359617]}},{"file_name":"/home/alfonso/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[703681872048928520,9049002948068361285]}},{"file_name":"/home/alfonso/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[2263930034501991030,4095801913223090716]}},{"file_name":"/home/alfonso/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src/lib.rs","num":4,"id":{"name":"std_unicode","disambiguator":[11540587595057943686,16811948693617420789]}},{"file_name":"/home/alfonso/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18135972976458475440,14500584310801144659]}},{"file_name":"/home/alfonso/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src/lib.rs","num":9,"id":{"name":"alloc_jemalloc","disambiguator":[3136525304541147205,13942228075046867031]}},{"file_name":"/home/alfonso/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6188724401783059987,18077621352408124788]}},{"file_name":"/home/alfonso/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src/lib.rs","num":3,"id":{"name":"alloc","disambiguator":[13692754116872877343,17091487213619735721]}}],"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":472,"byte_end":2549,"line_start":11,"line_end":79,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":68352,"byte_end":68353,"line_start":15,"line_end":15,"column_start":32,"column_end":33},"name":"*","value":"InvalidBase64Byte, InvalidBase64Length"},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":68383,"byte_end":68384,"line_start":16,"line_end":16,"column_start":29,"column_end":30},"name":"*","value":"Standard, UrlSafe"},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,104,101,120,46,114,115],"byte_start":85263,"byte_end":85264,"line_start":15,"line_end":15,"column_start":29,"column_end":30},"name":"*","value":"InvalidHexCharacter, InvalidHexLength"},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2545,"byte_end":2546,"line_start":78,"line_end":78,"column_start":24,"column_end":25},"name":"*","value":""}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":472,"byte_end":2549,"line_start":11,"line_end":79,"column_start":1,"column_end":2},"name":"","qualname":"::","value":".cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":14},{"krate":0,"index":234},{"krate":0,"index":273},{"krate":0,"index":308},{"krate":0,"index":331},{"krate":0,"index":617}],"decl_id":null,"docs":" Support code for encoding and decoding types.","sig":null,"attributes":[{"value":"allow(trivial_numeric_casts)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1619,"byte_end":1651,"line_start":44,"line_end":44,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":25},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":4429,"byte_end":4436,"line_start":47,"line_end":47,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::serialize::Encoder","value":"Encoder","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61}],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":26},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":4491,"byte_end":4496,"line_start":49,"line_end":49,"column_start":10,"column_end":15},"name":"Error","qualname":"::serialize::Encoder::Error","value":"type Error;","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" The error type for method results.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":4635,"byte_end":4643,"line_start":55,"line_end":55,"column_start":8,"column_end":16},"name":"emit_nil","qualname":"::serialize::Encoder::emit_nil","value":"fn (&mut self) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":4719,"byte_end":4729,"line_start":58,"line_end":58,"column_start":8,"column_end":18},"name":"emit_usize","qualname":"::serialize::Encoder::emit_usize","value":"fn (&mut self, v: usize) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":4813,"byte_end":4821,"line_start":61,"line_end":61,"column_start":8,"column_end":16},"name":"emit_u64","qualname":"::serialize::Encoder::emit_u64","value":"fn (&mut self, v: u64) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":4903,"byte_end":4911,"line_start":64,"line_end":64,"column_start":8,"column_end":16},"name":"emit_u32","qualname":"::serialize::Encoder::emit_u32","value":"fn (&mut self, v: u32) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":4993,"byte_end":5001,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"emit_u16","qualname":"::serialize::Encoder::emit_u16","value":"fn (&mut self, v: u16) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":5082,"byte_end":5089,"line_start":70,"line_end":70,"column_start":8,"column_end":15},"name":"emit_u8","qualname":"::serialize::Encoder::emit_u8","value":"fn (&mut self, v: u8) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":5172,"byte_end":5182,"line_start":73,"line_end":73,"column_start":8,"column_end":18},"name":"emit_isize","qualname":"::serialize::Encoder::emit_isize","value":"fn (&mut self, v: isize) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":5266,"byte_end":5274,"line_start":76,"line_end":76,"column_start":8,"column_end":16},"name":"emit_i64","qualname":"::serialize::Encoder::emit_i64","value":"fn (&mut self, v: i64) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":5356,"byte_end":5364,"line_start":79,"line_end":79,"column_start":8,"column_end":16},"name":"emit_i32","qualname":"::serialize::Encoder::emit_i32","value":"fn (&mut self, v: i32) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":5446,"byte_end":5454,"line_start":82,"line_end":82,"column_start":8,"column_end":16},"name":"emit_i16","qualname":"::serialize::Encoder::emit_i16","value":"fn (&mut self, v: i16) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":5535,"byte_end":5542,"line_start":85,"line_end":85,"column_start":8,"column_end":15},"name":"emit_i8","qualname":"::serialize::Encoder::emit_i8","value":"fn (&mut self, v: i8) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":5722,"byte_end":5731,"line_start":91,"line_end":91,"column_start":8,"column_end":17},"name":"emit_bool","qualname":"::serialize::Encoder::emit_bool","value":"fn (&mut self, v: bool) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":5814,"byte_end":5822,"line_start":94,"line_end":94,"column_start":8,"column_end":16},"name":"emit_f64","qualname":"::serialize::Encoder::emit_f64","value":"fn (&mut self, v: f64) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":5904,"byte_end":5912,"line_start":97,"line_end":97,"column_start":8,"column_end":16},"name":"emit_f32","qualname":"::serialize::Encoder::emit_f32","value":"fn (&mut self, v: f32) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":6113,"byte_end":6122,"line_start":103,"line_end":103,"column_start":8,"column_end":17},"name":"emit_char","qualname":"::serialize::Encoder::emit_char","value":"fn (&mut self, v: char) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":6208,"byte_end":6216,"line_start":106,"line_end":106,"column_start":8,"column_end":16},"name":"emit_str","qualname":"::serialize::Encoder::emit_str","value":"fn (&mut self, v: &str) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":6538,"byte_end":6547,"line_start":114,"line_end":114,"column_start":8,"column_end":17},"name":"emit_enum","qualname":"::serialize::Encoder::emit_enum","value":"fn <F> (&mut self, name: &str, f: F) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":8556,"byte_end":8573,"line_start":165,"line_end":165,"column_start":8,"column_end":25},"name":"emit_enum_variant","qualname":"::serialize::Encoder::emit_enum_variant","value":"fn <F> (&mut self, v_name: &str, v_id: usize, len: usize, f: F) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":9291,"byte_end":9312,"line_start":182,"line_end":182,"column_start":8,"column_end":29},"name":"emit_enum_variant_arg","qualname":"::serialize::Encoder::emit_enum_variant_arg","value":"fn <F> (&mut self, a_idx: usize, f: F) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":11236,"byte_end":11260,"line_start":231,"line_end":231,"column_start":8,"column_end":32},"name":"emit_enum_struct_variant","qualname":"::serialize::Encoder::emit_enum_struct_variant","value":"fn <F> (&mut self, v_name: &str, v_id: usize, len: usize, f: F) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":12029,"byte_end":12059,"line_start":249,"line_end":249,"column_start":8,"column_end":38},"name":"emit_enum_struct_variant_field","qualname":"::serialize::Encoder::emit_enum_struct_variant_field","value":"fn <F> (&mut self, f_name: &str, f_idx: usize, f: F) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":13239,"byte_end":13250,"line_start":286,"line_end":286,"column_start":8,"column_end":19},"name":"emit_struct","qualname":"::serialize::Encoder::emit_struct","value":"fn <F> (&mut self, name: &str, len: usize, f: F) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":13880,"byte_end":13897,"line_start":300,"line_end":300,"column_start":8,"column_end":25},"name":"emit_struct_field","qualname":"::serialize::Encoder::emit_struct_field","value":"fn <F> (&mut self, f_name: &str, f_idx: usize, f: F) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":14454,"byte_end":14464,"line_start":312,"line_end":312,"column_start":8,"column_end":18},"name":"emit_tuple","qualname":"::serialize::Encoder::emit_tuple","value":"fn <F> (&mut self, len: usize, f: F) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":15023,"byte_end":15037,"line_start":325,"line_end":325,"column_start":8,"column_end":22},"name":"emit_tuple_arg","qualname":"::serialize::Encoder::emit_tuple_arg","value":"fn <F> (&mut self, idx: usize, f: F) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":16104,"byte_end":16121,"line_start":357,"line_end":357,"column_start":8,"column_end":25},"name":"emit_tuple_struct","qualname":"::serialize::Encoder::emit_tuple_struct","value":"fn <F> (&mut self, name: &str, len: usize, f: F) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":16744,"byte_end":16765,"line_start":372,"line_end":372,"column_start":8,"column_end":29},"name":"emit_tuple_struct_arg","qualname":"::serialize::Encoder::emit_tuple_struct_arg","value":"fn <F> (&mut self, f_idx: usize, f: F) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":17544,"byte_end":17555,"line_start":389,"line_end":389,"column_start":8,"column_end":19},"name":"emit_option","qualname":"::serialize::Encoder::emit_option","value":"fn <F> (&mut self, f: F) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":17798,"byte_end":17814,"line_start":395,"line_end":395,"column_start":8,"column_end":24},"name":"emit_option_none","qualname":"::serialize::Encoder::emit_option_none","value":"fn (&mut self) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":18101,"byte_end":18117,"line_start":403,"line_end":403,"column_start":8,"column_end":24},"name":"emit_option_some","qualname":"::serialize::Encoder::emit_option_some","value":"fn <F> (&mut self, f: F) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":18547,"byte_end":18555,"line_start":414,"line_end":414,"column_start":8,"column_end":16},"name":"emit_seq","qualname":"::serialize::Encoder::emit_seq","value":"fn <F> (&mut self, len: usize, f: F) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":19131,"byte_end":19143,"line_start":427,"line_end":427,"column_start":8,"column_end":20},"name":"emit_seq_elt","qualname":"::serialize::Encoder::emit_seq_elt","value":"fn <F> (&mut self, idx: usize, f: F) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":20279,"byte_end":20287,"line_start":459,"line_end":459,"column_start":8,"column_end":16},"name":"emit_map","qualname":"::serialize::Encoder::emit_map","value":"fn <F> (&mut self, len: usize, f: F) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":20938,"byte_end":20954,"line_start":473,"line_end":473,"column_start":8,"column_end":24},"name":"emit_map_elt_key","qualname":"::serialize::Encoder::emit_map_elt_key","value":"fn <F> (&mut self, idx: usize, f: F) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":21609,"byte_end":21625,"line_start":487,"line_end":487,"column_start":8,"column_end":24},"name":"emit_map_elt_val","qualname":"::serialize::Encoder::emit_map_elt_val","value":"fn <F> (&mut self, idx: usize, f: F) -> Result<(), Self::Error>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Trait for writing out an encoding when serializing.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":62},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":22491,"byte_end":22498,"line_start":505,"line_end":505,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::serialize::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97}],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":63},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":22553,"byte_end":22558,"line_start":507,"line_end":507,"column_start":10,"column_end":15},"name":"Error","qualname":"::serialize::Decoder::Error","value":"type Error;","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" The error type for method results.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":22618,"byte_end":22626,"line_start":511,"line_end":511,"column_start":8,"column_end":16},"name":"read_nil","qualname":"::serialize::Decoder::read_nil","value":"fn (&mut self) -> Result<(), Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":22702,"byte_end":22712,"line_start":514,"line_end":514,"column_start":8,"column_end":18},"name":"read_usize","qualname":"::serialize::Decoder::read_usize","value":"fn (&mut self) -> Result<usize, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":22789,"byte_end":22797,"line_start":517,"line_end":517,"column_start":8,"column_end":16},"name":"read_u64","qualname":"::serialize::Decoder::read_u64","value":"fn (&mut self) -> Result<u64, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":22872,"byte_end":22880,"line_start":520,"line_end":520,"column_start":8,"column_end":16},"name":"read_u32","qualname":"::serialize::Decoder::read_u32","value":"fn (&mut self) -> Result<u32, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":22955,"byte_end":22963,"line_start":523,"line_end":523,"column_start":8,"column_end":16},"name":"read_u16","qualname":"::serialize::Decoder::read_u16","value":"fn (&mut self) -> Result<u16, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":23037,"byte_end":23044,"line_start":526,"line_end":526,"column_start":8,"column_end":15},"name":"read_u8","qualname":"::serialize::Decoder::read_u8","value":"fn (&mut self) -> Result<u8, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":23120,"byte_end":23130,"line_start":529,"line_end":529,"column_start":8,"column_end":18},"name":"read_isize","qualname":"::serialize::Decoder::read_isize","value":"fn (&mut self) -> Result<isize, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":23207,"byte_end":23215,"line_start":532,"line_end":532,"column_start":8,"column_end":16},"name":"read_i64","qualname":"::serialize::Decoder::read_i64","value":"fn (&mut self) -> Result<i64, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":23290,"byte_end":23298,"line_start":535,"line_end":535,"column_start":8,"column_end":16},"name":"read_i32","qualname":"::serialize::Decoder::read_i32","value":"fn (&mut self) -> Result<i32, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":23373,"byte_end":23381,"line_start":538,"line_end":538,"column_start":8,"column_end":16},"name":"read_i16","qualname":"::serialize::Decoder::read_i16","value":"fn (&mut self) -> Result<i16, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":23455,"byte_end":23462,"line_start":541,"line_end":541,"column_start":8,"column_end":15},"name":"read_i8","qualname":"::serialize::Decoder::read_i8","value":"fn (&mut self) -> Result<i8, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":23537,"byte_end":23546,"line_start":544,"line_end":544,"column_start":8,"column_end":17},"name":"read_bool","qualname":"::serialize::Decoder::read_bool","value":"fn (&mut self) -> Result<bool, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":23622,"byte_end":23630,"line_start":547,"line_end":547,"column_start":8,"column_end":16},"name":"read_f64","qualname":"::serialize::Decoder::read_f64","value":"fn (&mut self) -> Result<f64, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":23705,"byte_end":23713,"line_start":550,"line_end":550,"column_start":8,"column_end":16},"name":"read_f32","qualname":"::serialize::Decoder::read_f32","value":"fn (&mut self) -> Result<f32, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":23789,"byte_end":23798,"line_start":553,"line_end":553,"column_start":8,"column_end":17},"name":"read_char","qualname":"::serialize::Decoder::read_char","value":"fn (&mut self) -> Result<char, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":23877,"byte_end":23885,"line_start":556,"line_end":556,"column_start":8,"column_end":16},"name":"read_str","qualname":"::serialize::Decoder::read_str","value":"fn (&mut self) -> Result<String, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":24250,"byte_end":24259,"line_start":565,"line_end":565,"column_start":8,"column_end":17},"name":"read_enum","qualname":"::serialize::Decoder::read_enum","value":"fn <T, F> (&mut self, name: &str, f: F) -> Result<T, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":24749,"byte_end":24766,"line_start":575,"line_end":575,"column_start":8,"column_end":25},"name":"read_enum_variant","qualname":"::serialize::Decoder::read_enum_variant","value":"fn <T, F> (&mut self, names: &[&str], f: F) -> Result<T, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":25722,"byte_end":25743,"line_start":593,"line_end":593,"column_start":8,"column_end":29},"name":"read_enum_variant_arg","qualname":"::serialize::Decoder::read_enum_variant_arg","value":"fn <T, F> (&mut self, a_idx: usize, f: F) -> Result<T, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":26071,"byte_end":26095,"line_start":601,"line_end":601,"column_start":8,"column_end":32},"name":"read_enum_struct_variant","qualname":"::serialize::Decoder::read_enum_struct_variant","value":"fn <T, F> (&mut self, names: &[&str], f: F) -> Result<T, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":27196,"byte_end":27226,"line_start":622,"line_end":622,"column_start":8,"column_end":38},"name":"read_enum_struct_variant_field","qualname":"::serialize::Decoder::read_enum_struct_variant_field","value":"fn <T, F> (&mut self, f_name: &str, f_idx: usize, f: F) -> Result<T, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":27866,"byte_end":27877,"line_start":636,"line_end":636,"column_start":8,"column_end":19},"name":"read_struct","qualname":"::serialize::Decoder::read_struct","value":"fn <T, F> (&mut self, s_name: &str, len: usize, f: F) -> Result<T, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":28795,"byte_end":28812,"line_start":655,"line_end":655,"column_start":8,"column_end":25},"name":"read_struct_field","qualname":"::serialize::Decoder::read_struct_field","value":"fn <T, F> (&mut self, f_name: &str, f_idx: usize, f: F) -> Result<T, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":29491,"byte_end":29501,"line_start":671,"line_end":671,"column_start":8,"column_end":18},"name":"read_tuple","qualname":"::serialize::Decoder::read_tuple","value":"fn <T, F> (&mut self, len: usize, f: F) -> Result<T, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":30060,"byte_end":30074,"line_start":684,"line_end":684,"column_start":8,"column_end":22},"name":"read_tuple_arg","qualname":"::serialize::Decoder::read_tuple_arg","value":"fn <T, F> (&mut self, a_idx: usize, f: F) -> Result<T, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":30471,"byte_end":30488,"line_start":693,"line_end":693,"column_start":8,"column_end":25},"name":"read_tuple_struct","qualname":"::serialize::Decoder::read_tuple_struct","value":"fn <T, F> (&mut self, s_name: &str, len: usize, f: F) -> Result<T, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":31121,"byte_end":31142,"line_start":708,"line_end":708,"column_start":8,"column_end":29},"name":"read_tuple_struct_arg","qualname":"::serialize::Decoder::read_tuple_struct_arg","value":"fn <T, F> (&mut self, a_idx: usize, f: F) -> Result<T, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":32063,"byte_end":32074,"line_start":727,"line_end":727,"column_start":8,"column_end":19},"name":"read_option","qualname":"::serialize::Decoder::read_option","value":"fn <T, F> (&mut self, f: F) -> Result<T, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":32500,"byte_end":32508,"line_start":737,"line_end":737,"column_start":8,"column_end":16},"name":"read_seq","qualname":"::serialize::Decoder::read_seq","value":"fn <T, F> (&mut self, f: F) -> Result<T, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":33079,"byte_end":33091,"line_start":750,"line_end":750,"column_start":8,"column_end":20},"name":"read_seq_elt","qualname":"::serialize::Decoder::read_seq_elt","value":"fn <T, F> (&mut self, idx: usize, f: F) -> Result<T, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":33456,"byte_end":33464,"line_start":758,"line_end":758,"column_start":8,"column_end":16},"name":"read_map","qualname":"::serialize::Decoder::read_map","value":"fn <T, F> (&mut self, f: F) -> Result<T, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":34105,"byte_end":34121,"line_start":772,"line_end":772,"column_start":8,"column_end":24},"name":"read_map_elt_key","qualname":"::serialize::Decoder::read_map_elt_key","value":"fn <T, F> (&mut self, idx: usize, f: F) -> Result<T, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":34801,"byte_end":34817,"line_start":787,"line_end":787,"column_start":8,"column_end":24},"name":"read_map_elt_val","qualname":"::serialize::Decoder::read_map_elt_val","value":"fn <T, F> (&mut self, idx: usize, f: F) -> Result<T, Self::Error>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":35296,"byte_end":35301,"line_start":798,"line_end":798,"column_start":8,"column_end":13},"name":"error","qualname":"::serialize::Decoder::error","value":"fn (&mut self, err: &str) -> Self::Error","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Trait for reading in an encoding for deserialization.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":98},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":36654,"byte_end":36663,"line_start":851,"line_end":851,"column_start":11,"column_end":20},"name":"Encodable","qualname":"::serialize::Encodable","value":"Encodable","parent":null,"children":[{"krate":0,"index":99}],"decl_id":null,"docs":" Trait for serializing a type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":36719,"byte_end":36725,"line_start":853,"line_end":853,"column_start":8,"column_end":14},"name":"encode","qualname":"::serialize::Encodable::encode","value":"fn <S> (&self, s: &mut S) -> Result<(), S::Error>","parent":{"krate":0,"index":98},"children":[],"decl_id":null,"docs":" Trait for serializing a type.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":100},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":38042,"byte_end":38051,"line_start":902,"line_end":902,"column_start":11,"column_end":20},"name":"Decodable","qualname":"::serialize::Decodable","value":"Decodable:  Sized","parent":null,"children":[{"krate":0,"index":101}],"decl_id":null,"docs":" Trait for deserializing a type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":38115,"byte_end":38121,"line_start":904,"line_end":904,"column_start":8,"column_end":14},"name":"decode","qualname":"::serialize::Decodable::decode","value":"fn <D> (d: &mut D) -> Result<Self, D::Error>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" Trait for deserializing a type.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":226},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":53173,"byte_end":53187,"line_start":1460,"line_end":1460,"column_start":11,"column_end":25},"name":"EncoderHelpers","qualname":"::serialize::EncoderHelpers","value":"EncoderHelpers:  Encoder","parent":null,"children":[{"krate":0,"index":227}],"decl_id":null,"docs":" Trait with helper functions for implementing `Encodable`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":54160,"byte_end":54173,"line_start":1490,"line_end":1490,"column_start":8,"column_end":21},"name":"emit_from_vec","qualname":"::serialize::EncoderHelpers::emit_from_vec","value":"fn <T, F> (&mut self, v: &[T], f: F) -> Result<(), <Self as Encoder>::Error>","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Trait with helper functions for implementing `Encodable`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":230},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":55027,"byte_end":55041,"line_start":1515,"line_end":1515,"column_start":11,"column_end":25},"name":"DecoderHelpers","qualname":"::serialize::DecoderHelpers","value":"DecoderHelpers:  Decoder","parent":null,"children":[{"krate":0,"index":231}],"decl_id":null,"docs":" Trait with helper functions for implementing `Decodable`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":56042,"byte_end":56053,"line_start":1545,"line_end":1545,"column_start":8,"column_end":19},"name":"read_to_vec","qualname":"::serialize::DecoderHelpers::read_to_vec","value":"fn <T, F> (&mut self, f: F) -> Result<Vec<T>, <Self as Decoder>::Error>","parent":{"krate":0,"index":230},"children":[],"decl_id":null,"docs":" Trait with helper functions for implementing `Decodable`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":273},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"base64","qualname":"::base64","value":".cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src/base64.rs","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":799},{"krate":0,"index":803},{"krate":0,"index":802},{"krate":0,"index":800},{"krate":0,"index":805},{"krate":0,"index":809},{"krate":0,"index":808},{"krate":0,"index":806},{"krate":0,"index":811},{"krate":0,"index":815},{"krate":0,"index":814},{"krate":0,"index":812},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":817},{"krate":0,"index":819},{"krate":0,"index":818},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307}],"decl_id":null,"docs":" Base64 binary-to-text encoding\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485254},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":68568,"byte_end":68576,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"name":"Standard","qualname":"::base64::CharacterSet::Standard","value":"CharacterSet::Standard","parent":{"krate":0,"index":799},"children":[],"decl_id":null,"docs":" The standard character set (uses `+` and `/`)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485255},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":68636,"byte_end":68643,"line_start":27,"line_end":27,"column_start":5,"column_end":12},"name":"UrlSafe","qualname":"::base64::CharacterSet::UrlSafe","value":"CharacterSet::UrlSafe","parent":{"krate":0,"index":799},"children":[],"decl_id":null,"docs":" The URL safe character set (uses `-` and `_`)\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":799},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":68495,"byte_end":68507,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"CharacterSet","qualname":"::base64::CharacterSet","value":"CharacterSet::{Standard, UrlSafe}","parent":null,"children":[{"krate":0,"index":2147485254},{"krate":0,"index":2147485255}],"decl_id":null,"docs":" Available encoding character sets\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":68486,"byte_end":68645,"line_start":23,"line_end":28,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485256},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":68773,"byte_end":68775,"line_start":34,"line_end":34,"column_start":5,"column_end":7},"name":"LF","qualname":"::base64::Newline::LF","value":"Newline::LF","parent":{"krate":0,"index":805},"children":[],"decl_id":null,"docs":" A linefeed (i.e. Unix-style newline)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485257},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":68851,"byte_end":68855,"line_start":36,"line_end":36,"column_start":5,"column_end":9},"name":"CRLF","qualname":"::base64::Newline::CRLF","value":"Newline::CRLF","parent":{"krate":0,"index":805},"children":[],"decl_id":null,"docs":" A carriage return and a linefeed (i.e. Windows-style newline)\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":805},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":68714,"byte_end":68721,"line_start":32,"line_end":32,"column_start":10,"column_end":17},"name":"Newline","qualname":"::base64::Newline","value":"Newline::{LF, CRLF}","parent":null,"children":[{"krate":0,"index":2147485256},{"krate":0,"index":2147485257}],"decl_id":null,"docs":" Available newline types\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":68705,"byte_end":68857,"line_start":32,"line_end":37,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":811},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":68955,"byte_end":68961,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"name":"Config","qualname":"::base64::Config","value":"Config { char_set, newline, pad, line_length }","parent":null,"children":[{"krate":0,"index":2147485258},{"krate":0,"index":2147485259},{"krate":0,"index":2147485260},{"krate":0,"index":2147485261}],"decl_id":null,"docs":" Contains configuration parameters for `to_base64`.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":68944,"byte_end":69252,"line_start":41,"line_end":50,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":2147485258},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":69001,"byte_end":69009,"line_start":43,"line_end":43,"column_start":9,"column_end":17},"name":"char_set","qualname":"::base64::Config::char_set","value":"base64::CharacterSet","parent":{"krate":0,"index":811},"children":[],"decl_id":null,"docs":" Character set to use\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147485259},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":69056,"byte_end":69063,"line_start":45,"line_end":45,"column_start":9,"column_end":16},"name":"newline","qualname":"::base64::Config::newline","value":"base64::Newline","parent":{"krate":0,"index":811},"children":[],"decl_id":null,"docs":" Newline to use\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147485260},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":69129,"byte_end":69132,"line_start":47,"line_end":47,"column_start":9,"column_end":12},"name":"pad","qualname":"::base64::Config::pad","value":"bool","parent":{"krate":0,"index":811},"children":[],"decl_id":null,"docs":" True to pad output with `=` characters\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147485261},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":69224,"byte_end":69235,"line_start":49,"line_end":49,"column_start":9,"column_end":20},"name":"line_length","qualname":"::base64::Config::line_length","value":"std::option::Option<usize>","parent":{"krate":0,"index":811},"children":[],"decl_id":null,"docs":" `Some(len)` to wrap lines at `len`, `None` to disable line wrapping\n","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":278},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":69321,"byte_end":69329,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"STANDARD","qualname":"::base64::STANDARD","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" Configuration for RFC 4648 standard base64 encoding\n","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":279},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":69489,"byte_end":69497,"line_start":57,"line_end":57,"column_start":12,"column_end":20},"name":"URL_SAFE","qualname":"::base64::URL_SAFE","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" Configuration for RFC 4648 base64url encoding\n","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":280},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":69659,"byte_end":69663,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"MIME","qualname":"::base64::MIME","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" Configuration for RFC 2045 MIME base64 encoding\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":283},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":70212,"byte_end":70220,"line_start":73,"line_end":73,"column_start":11,"column_end":19},"name":"ToBase64","qualname":"::base64::ToBase64","value":"ToBase64","parent":null,"children":[{"krate":0,"index":284}],"decl_id":null,"docs":" A trait for converting a value to base64 encoding.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":70367,"byte_end":70376,"line_start":76,"line_end":76,"column_start":8,"column_end":17},"name":"to_base64","qualname":"::base64::ToBase64::to_base64","value":"fn (&self, config: Config) -> String","parent":{"krate":0,"index":283},"children":[],"decl_id":null,"docs":" A trait for converting a value to base64 encoding.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":289},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":74391,"byte_end":74401,"line_start":201,"line_end":201,"column_start":11,"column_end":21},"name":"FromBase64","qualname":"::base64::FromBase64","value":"FromBase64","parent":null,"children":[{"krate":0,"index":290}],"decl_id":null,"docs":" A trait for converting from base64 encoded values.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":74546,"byte_end":74557,"line_start":204,"line_end":204,"column_start":8,"column_end":19},"name":"from_base64","qualname":"::base64::FromBase64::from_base64","value":"fn (&self) -> Result<Vec<u8>, FromBase64Error>","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" A trait for converting from base64 encoded values.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485262},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":74793,"byte_end":74810,"line_start":211,"line_end":211,"column_start":5,"column_end":22},"name":"InvalidBase64Byte","qualname":"::base64::FromBase64Error::InvalidBase64Byte","value":"FromBase64Error::InvalidBase64Byte(u8, usize)","parent":{"krate":0,"index":817},"children":[],"decl_id":null,"docs":" The input contained a character not part of the base64 format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485265},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":74867,"byte_end":74886,"line_start":213,"line_end":213,"column_start":5,"column_end":24},"name":"InvalidBase64Length","qualname":"::base64::FromBase64Error::InvalidBase64Length","value":"FromBase64Error::InvalidBase64Length","parent":{"krate":0,"index":817},"children":[],"decl_id":null,"docs":" The input had an invalid length\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":817},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":74701,"byte_end":74716,"line_start":209,"line_end":209,"column_start":10,"column_end":25},"name":"FromBase64Error","qualname":"::base64::FromBase64Error","value":"FromBase64Error::{InvalidBase64Byte, InvalidBase64Length}","parent":null,"children":[{"krate":0,"index":2147485262},{"krate":0,"index":2147485265}],"decl_id":null,"docs":" Errors that can occur when decoding a base64 encoded string\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":74692,"byte_end":74889,"line_start":209,"line_end":214,"column_start":1,"column_end":2}}]},{"kind":"Mod","id":{"krate":0,"index":308},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,104,101,120,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hex","qualname":"::hex","value":".cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src/hex.rs","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":319},{"krate":0,"index":821},{"krate":0,"index":823},{"krate":0,"index":822},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":329}],"decl_id":null,"docs":" Hex binary-to-text encoding\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":312},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,104,101,120,46,114,115],"byte_start":85367,"byte_end":85372,"line_start":21,"line_end":21,"column_start":11,"column_end":16},"name":"ToHex","qualname":"::hex::ToHex","value":"ToHex","parent":null,"children":[{"krate":0,"index":313}],"decl_id":null,"docs":" A trait for converting a value to hexadecimal encoding\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,104,101,120,46,114,115],"byte_start":85471,"byte_end":85477,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"to_hex","qualname":"::hex::ToHex::to_hex","value":"fn (&self) -> String","parent":{"krate":0,"index":312},"children":[],"decl_id":null,"docs":" A trait for converting a value to hexadecimal encoding\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":319},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,104,101,120,46,114,115],"byte_start":86379,"byte_end":86386,"line_start":63,"line_end":63,"column_start":11,"column_end":18},"name":"FromHex","qualname":"::hex::FromHex","value":"FromHex","parent":null,"children":[{"krate":0,"index":320}],"decl_id":null,"docs":" A trait for converting hexadecimal encoded values\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,104,101,120,46,114,115],"byte_start":86536,"byte_end":86544,"line_start":66,"line_end":66,"column_start":8,"column_end":16},"name":"from_hex","qualname":"::hex::FromHex::from_hex","value":"fn (&self) -> Result<Vec<u8>, FromHexError>","parent":{"krate":0,"index":319},"children":[],"decl_id":null,"docs":" A trait for converting hexadecimal encoded values\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485266},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,104,101,120,46,114,115],"byte_start":86768,"byte_end":86787,"line_start":73,"line_end":73,"column_start":5,"column_end":24},"name":"InvalidHexCharacter","qualname":"::hex::FromHexError::InvalidHexCharacter","value":"FromHexError::InvalidHexCharacter(char, usize)","parent":{"krate":0,"index":821},"children":[],"decl_id":null,"docs":" The input contained a character not part of the hex format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485269},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,104,101,120,46,114,115],"byte_start":86846,"byte_end":86862,"line_start":75,"line_end":75,"column_start":5,"column_end":21},"name":"InvalidHexLength","qualname":"::hex::FromHexError::InvalidHexLength","value":"FromHexError::InvalidHexLength","parent":{"krate":0,"index":821},"children":[],"decl_id":null,"docs":" The input had an invalid length\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":821},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,104,101,120,46,114,115],"byte_start":86682,"byte_end":86694,"line_start":71,"line_end":71,"column_start":10,"column_end":22},"name":"FromHexError","qualname":"::hex::FromHexError","value":"FromHexError::{InvalidHexCharacter, InvalidHexLength}","parent":null,"children":[{"krate":0,"index":2147485266},{"krate":0,"index":2147485269}],"decl_id":null,"docs":" Errors that can occur when decoding a hex encoded string\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,104,101,120,46,114,115],"byte_start":86673,"byte_end":86865,"line_start":71,"line_end":76,"column_start":1,"column_end":2}}]},{"kind":"Mod","id":{"krate":0,"index":331},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"json","qualname":"::json","value":".cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src/json.rs","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":825},{"krate":0,"index":837},{"krate":0,"index":834},{"krate":0,"index":828},{"krate":0,"index":826},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":839},{"krate":0,"index":843},{"krate":0,"index":842},{"krate":0,"index":840},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":848},{"krate":0,"index":851},{"krate":0,"index":849},{"krate":0,"index":854},{"krate":0,"index":857},{"krate":0,"index":855},{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":377},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":408},{"krate":0,"index":445},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":477},{"krate":0,"index":480},{"krate":0,"index":858},{"krate":0,"index":861},{"krate":0,"index":859},{"krate":0,"index":864},{"krate":0,"index":867},{"krate":0,"index":865},{"krate":0,"index":483},{"krate":0,"index":870},{"krate":0,"index":875},{"krate":0,"index":873},{"krate":0,"index":871},{"krate":0,"index":878},{"krate":0,"index":883},{"krate":0,"index":881},{"krate":0,"index":879},{"krate":0,"index":484},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":502},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":539},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":569},{"krate":0,"index":571},{"krate":0,"index":896},{"krate":0,"index":898},{"krate":0,"index":900},{"krate":0,"index":902},{"krate":0,"index":904},{"krate":0,"index":572},{"krate":0,"index":906},{"krate":0,"index":908},{"krate":0,"index":910},{"krate":0,"index":912},{"krate":0,"index":914},{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":577},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":916},{"krate":0,"index":918},{"krate":0,"index":920},{"krate":0,"index":922},{"krate":0,"index":924},{"krate":0,"index":926},{"krate":0,"index":928},{"krate":0,"index":930},{"krate":0,"index":932},{"krate":0,"index":934},{"krate":0,"index":936},{"krate":0,"index":938},{"krate":0,"index":591},{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":614}],"decl_id":null,"docs":" JSON parsing and serialization","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485270},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":99241,"byte_end":99244,"line_start":262,"line_end":262,"column_start":5,"column_end":8},"name":"I64","qualname":"::json::Json::I64","value":"Json::I64(i64)","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485272},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":99255,"byte_end":99258,"line_start":263,"line_end":263,"column_start":5,"column_end":8},"name":"U64","qualname":"::json::Json::U64","value":"Json::U64(u64)","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485274},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":99269,"byte_end":99272,"line_start":264,"line_end":264,"column_start":5,"column_end":8},"name":"F64","qualname":"::json::Json::F64","value":"Json::F64(f64)","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485276},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":99283,"byte_end":99289,"line_start":265,"line_end":265,"column_start":5,"column_end":11},"name":"String","qualname":"::json::Json::String","value":"Json::String(string::String)","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485278},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":99311,"byte_end":99318,"line_start":266,"line_end":266,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::json::Json::Boolean","value":"Json::Boolean(bool)","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485280},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":99330,"byte_end":99335,"line_start":267,"line_end":267,"column_start":5,"column_end":10},"name":"Array","qualname":"::json::Json::Array","value":"Json::Array(self::Array)","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485282},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":99354,"byte_end":99360,"line_start":268,"line_end":268,"column_start":5,"column_end":11},"name":"Object","qualname":"::json::Json::Object","value":"Json::Object(self::Object)","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485284},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":99380,"byte_end":99384,"line_start":269,"line_end":269,"column_start":5,"column_end":9},"name":"Null","qualname":"::json::Json::Null","value":"Json::Null","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":825},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":99230,"byte_end":99234,"line_start":261,"line_end":261,"column_start":10,"column_end":14},"name":"Json","qualname":"::json::Json","value":"Json::{I64, U64, F64, String, Boolean, Array, Object, Null}","parent":null,"children":[{"krate":0,"index":2147485270},{"krate":0,"index":2147485272},{"krate":0,"index":2147485274},{"krate":0,"index":2147485276},{"krate":0,"index":2147485278},{"krate":0,"index":2147485280},{"krate":0,"index":2147485282},{"krate":0,"index":2147485284}],"decl_id":null,"docs":" Represents a json value\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":355},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":99398,"byte_end":99403,"line_start":272,"line_end":272,"column_start":10,"column_end":15},"name":"Array","qualname":"::json::Array","value":"Vec<Json>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":356},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":99426,"byte_end":99432,"line_start":273,"line_end":273,"column_start":10,"column_end":16},"name":"Object","qualname":"::json::Object","value":"BTreeMap<string::String, Json>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":357},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":99479,"byte_end":99489,"line_start":275,"line_end":275,"column_start":12,"column_end":22},"name":"PrettyJson","qualname":"::json::PrettyJson","value":"PrettyJson {  }","parent":null,"children":[{"krate":0,"index":2147483878}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":358},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":99526,"byte_end":99532,"line_start":277,"line_end":277,"column_start":12,"column_end":18},"name":"AsJson","qualname":"::json::AsJson","value":"AsJson {  }","parent":null,"children":[{"krate":0,"index":2147483880}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":359},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":99572,"byte_end":99584,"line_start":278,"line_end":278,"column_start":12,"column_end":24},"name":"AsPrettyJson","qualname":"::json::AsPrettyJson","value":"AsPrettyJson {  }","parent":null,"children":[{"krate":0,"index":2147483883},{"krate":0,"index":2147483884}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485285},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":99753,"byte_end":99766,"line_start":283,"line_end":283,"column_start":5,"column_end":18},"name":"InvalidSyntax","qualname":"::json::ErrorCode::InvalidSyntax","value":"ErrorCode::InvalidSyntax","parent":{"krate":0,"index":839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485286},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":99772,"byte_end":99785,"line_start":284,"line_end":284,"column_start":5,"column_end":18},"name":"InvalidNumber","qualname":"::json::ErrorCode::InvalidNumber","value":"ErrorCode::InvalidNumber","parent":{"krate":0,"index":839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485287},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":99791,"byte_end":99812,"line_start":285,"line_end":285,"column_start":5,"column_end":26},"name":"EOFWhileParsingObject","qualname":"::json::ErrorCode::EOFWhileParsingObject","value":"ErrorCode::EOFWhileParsingObject","parent":{"krate":0,"index":839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485288},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":99818,"byte_end":99838,"line_start":286,"line_end":286,"column_start":5,"column_end":25},"name":"EOFWhileParsingArray","qualname":"::json::ErrorCode::EOFWhileParsingArray","value":"ErrorCode::EOFWhileParsingArray","parent":{"krate":0,"index":839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485289},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":99844,"byte_end":99864,"line_start":287,"line_end":287,"column_start":5,"column_end":25},"name":"EOFWhileParsingValue","qualname":"::json::ErrorCode::EOFWhileParsingValue","value":"ErrorCode::EOFWhileParsingValue","parent":{"krate":0,"index":839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485290},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":99870,"byte_end":99891,"line_start":288,"line_end":288,"column_start":5,"column_end":26},"name":"EOFWhileParsingString","qualname":"::json::ErrorCode::EOFWhileParsingString","value":"ErrorCode::EOFWhileParsingString","parent":{"krate":0,"index":839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485291},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":99897,"byte_end":99913,"line_start":289,"line_end":289,"column_start":5,"column_end":21},"name":"KeyMustBeAString","qualname":"::json::ErrorCode::KeyMustBeAString","value":"ErrorCode::KeyMustBeAString","parent":{"krate":0,"index":839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485292},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":99919,"byte_end":99932,"line_start":290,"line_end":290,"column_start":5,"column_end":18},"name":"ExpectedColon","qualname":"::json::ErrorCode::ExpectedColon","value":"ErrorCode::ExpectedColon","parent":{"krate":0,"index":839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485293},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":99938,"byte_end":99956,"line_start":291,"line_end":291,"column_start":5,"column_end":23},"name":"TrailingCharacters","qualname":"::json::ErrorCode::TrailingCharacters","value":"ErrorCode::TrailingCharacters","parent":{"krate":0,"index":839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485294},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":99962,"byte_end":99975,"line_start":292,"line_end":292,"column_start":5,"column_end":18},"name":"TrailingComma","qualname":"::json::ErrorCode::TrailingComma","value":"ErrorCode::TrailingComma","parent":{"krate":0,"index":839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485295},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":99981,"byte_end":99994,"line_start":293,"line_end":293,"column_start":5,"column_end":18},"name":"InvalidEscape","qualname":"::json::ErrorCode::InvalidEscape","value":"ErrorCode::InvalidEscape","parent":{"krate":0,"index":839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485296},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":100000,"byte_end":100023,"line_start":294,"line_end":294,"column_start":5,"column_end":28},"name":"InvalidUnicodeCodePoint","qualname":"::json::ErrorCode::InvalidUnicodeCodePoint","value":"ErrorCode::InvalidUnicodeCodePoint","parent":{"krate":0,"index":839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485297},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":100029,"byte_end":100060,"line_start":295,"line_end":295,"column_start":5,"column_end":36},"name":"LoneLeadingSurrogateInHexEscape","qualname":"::json::ErrorCode::LoneLeadingSurrogateInHexEscape","value":"ErrorCode::LoneLeadingSurrogateInHexEscape","parent":{"krate":0,"index":839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485298},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":100066,"byte_end":100090,"line_start":296,"line_end":296,"column_start":5,"column_end":29},"name":"UnexpectedEndOfHexEscape","qualname":"::json::ErrorCode::UnexpectedEndOfHexEscape","value":"ErrorCode::UnexpectedEndOfHexEscape","parent":{"krate":0,"index":839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485299},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":100096,"byte_end":100111,"line_start":297,"line_end":297,"column_start":5,"column_end":20},"name":"UnrecognizedHex","qualname":"::json::ErrorCode::UnrecognizedHex","value":"ErrorCode::UnrecognizedHex","parent":{"krate":0,"index":839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485300},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":100117,"byte_end":100129,"line_start":298,"line_end":298,"column_start":5,"column_end":17},"name":"NotFourDigit","qualname":"::json::ErrorCode::NotFourDigit","value":"ErrorCode::NotFourDigit","parent":{"krate":0,"index":839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485301},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":100135,"byte_end":100159,"line_start":299,"line_end":299,"column_start":5,"column_end":29},"name":"ControlCharacterInString","qualname":"::json::ErrorCode::ControlCharacterInString","value":"ErrorCode::ControlCharacterInString","parent":{"krate":0,"index":839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485302},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":100165,"byte_end":100172,"line_start":300,"line_end":300,"column_start":5,"column_end":12},"name":"NotUtf8","qualname":"::json::ErrorCode::NotUtf8","value":"ErrorCode::NotUtf8","parent":{"krate":0,"index":839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":839},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":99737,"byte_end":99746,"line_start":282,"line_end":282,"column_start":10,"column_end":19},"name":"ErrorCode","qualname":"::json::ErrorCode","value":"ErrorCode::{InvalidSyntax, InvalidNumber, EOFWhileParsingObject, EOFWhileParsingArray, EOFWhileParsingValue, EOFWhileParsingString, KeyMustBeAString, ExpectedColon, TrailingCharacters, TrailingComma, InvalidEscape, InvalidUnicodeCodePoint, LoneLeadingSurrogateInHexEscape, UnexpectedEndOfHexEscape, UnrecognizedHex, NotFourDigit, ControlCharacterInString, NotUtf8}","parent":null,"children":[{"krate":0,"index":2147485285},{"krate":0,"index":2147485286},{"krate":0,"index":2147485287},{"krate":0,"index":2147485288},{"krate":0,"index":2147485289},{"krate":0,"index":2147485290},{"krate":0,"index":2147485291},{"krate":0,"index":2147485292},{"krate":0,"index":2147485293},{"krate":0,"index":2147485294},{"krate":0,"index":2147485295},{"krate":0,"index":2147485296},{"krate":0,"index":2147485297},{"krate":0,"index":2147485298},{"krate":0,"index":2147485299},{"krate":0,"index":2147485300},{"krate":0,"index":2147485301},{"krate":0,"index":2147485302}],"decl_id":null,"docs":" The errors that can arise while parsing a JSON stream.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":99728,"byte_end":100175,"line_start":282,"line_end":301,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485303},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":100244,"byte_end":100255,"line_start":306,"line_end":306,"column_start":5,"column_end":16},"name":"SyntaxError","qualname":"::json::ParserError::SyntaxError","value":"ParserError::SyntaxError(ErrorCode, usize, usize)","parent":{"krate":0,"index":845},"children":[],"decl_id":null,"docs":" msg, line, col\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485307},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":100286,"byte_end":100293,"line_start":307,"line_end":307,"column_start":5,"column_end":12},"name":"IoError","qualname":"::json::ParserError::IoError","value":"ParserError::IoError(io::Error)","parent":{"krate":0,"index":845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":845},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":100203,"byte_end":100214,"line_start":304,"line_end":304,"column_start":10,"column_end":21},"name":"ParserError","qualname":"::json::ParserError","value":"ParserError::{SyntaxError, IoError}","parent":null,"children":[{"krate":0,"index":2147485303},{"krate":0,"index":2147485307}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":362},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":100716,"byte_end":100728,"line_start":322,"line_end":322,"column_start":10,"column_end":22},"name":"BuilderError","qualname":"::json::BuilderError","value":"ParserError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485309},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":100801,"byte_end":100811,"line_start":326,"line_end":326,"column_start":5,"column_end":15},"name":"ParseError","qualname":"::json::DecoderError::ParseError","value":"DecoderError::ParseError(ParserError)","parent":{"krate":0,"index":848},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485311},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":100830,"byte_end":100843,"line_start":327,"line_end":327,"column_start":5,"column_end":18},"name":"ExpectedError","qualname":"::json::DecoderError::ExpectedError","value":"DecoderError::ExpectedError(string::String, string::String)","parent":{"krate":0,"index":848},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485314},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":100881,"byte_end":100898,"line_start":328,"line_end":328,"column_start":5,"column_end":22},"name":"MissingFieldError","qualname":"::json::DecoderError::MissingFieldError","value":"DecoderError::MissingFieldError(string::String)","parent":{"krate":0,"index":848},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485316},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":100920,"byte_end":100939,"line_start":329,"line_end":329,"column_start":5,"column_end":24},"name":"UnknownVariantError","qualname":"::json::DecoderError::UnknownVariantError","value":"DecoderError::UnknownVariantError(string::String)","parent":{"krate":0,"index":848},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485318},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":100961,"byte_end":100977,"line_start":330,"line_end":330,"column_start":5,"column_end":21},"name":"ApplicationError","qualname":"::json::DecoderError::ApplicationError","value":"DecoderError::ApplicationError(string::String)","parent":{"krate":0,"index":848},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485320},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":100999,"byte_end":101002,"line_start":331,"line_end":331,"column_start":5,"column_end":8},"name":"EOF","qualname":"::json::DecoderError::EOF","value":"DecoderError::EOF","parent":{"krate":0,"index":848},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":848},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":100782,"byte_end":100794,"line_start":325,"line_end":325,"column_start":10,"column_end":22},"name":"DecoderError","qualname":"::json::DecoderError","value":"DecoderError::{ParseError, ExpectedError, MissingFieldError, UnknownVariantError, ApplicationError, EOF}","parent":null,"children":[{"krate":0,"index":2147485309},{"krate":0,"index":2147485311},{"krate":0,"index":2147485314},{"krate":0,"index":2147485316},{"krate":0,"index":2147485318},{"krate":0,"index":2147485320}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485321},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":101058,"byte_end":101066,"line_start":336,"line_end":336,"column_start":5,"column_end":13},"name":"FmtError","qualname":"::json::EncoderError::FmtError","value":"EncoderError::FmtError(fmt::Error)","parent":{"krate":0,"index":854},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485323},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":101084,"byte_end":101097,"line_start":337,"line_end":337,"column_start":5,"column_end":18},"name":"BadHashmapKey","qualname":"::json::EncoderError::BadHashmapKey","value":"EncoderError::BadHashmapKey","parent":{"krate":0,"index":854},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":854},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":101039,"byte_end":101051,"line_start":335,"line_end":335,"column_start":10,"column_end":22},"name":"EncoderError","qualname":"::json::EncoderError","value":"EncoderError::{FmtError, BadHashmapKey}","parent":null,"children":[{"krate":0,"index":2147485321},{"krate":0,"index":2147485323}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":367},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":101554,"byte_end":101563,"line_start":355,"line_end":355,"column_start":8,"column_end":17},"name":"error_str","qualname":"::json::error_str","value":"fn (error: ErrorCode) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns a readable error string for a given error code.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":368},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":102723,"byte_end":102729,"line_start":379,"line_end":379,"column_start":8,"column_end":14},"name":"decode","qualname":"::json::decode","value":"fn <T> (s: &str) -> DecodeResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Shortcut function to decode a JSON `&str` into an object\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":369},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":103038,"byte_end":103044,"line_start":390,"line_end":390,"column_start":8,"column_end":14},"name":"encode","qualname":"::json::encode","value":"fn <T> (object: &T) -> EncodeResult<string::String>","parent":null,"children":[],"decl_id":null,"docs":" Shortcut function to encode a `T` into a JSON `String`\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":391},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":104617,"byte_end":104629,"line_start":457,"line_end":457,"column_start":10,"column_end":22},"name":"EncodeResult","qualname":"::json::EncodeResult","value":"Result<T, EncoderError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":392},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":104669,"byte_end":104681,"line_start":458,"line_end":458,"column_start":10,"column_end":22},"name":"DecodeResult","qualname":"::json::DecodeResult","value":"Result<T, DecoderError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":403},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":107672,"byte_end":107679,"line_start":577,"line_end":577,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::json::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":2147483896},{"krate":0,"index":2147483897},{"krate":0,"index":2147483898}],"decl_id":null,"docs":" A structure for implementing serialization to JSON.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":107934,"byte_end":107944,"line_start":586,"line_end":586,"column_start":12,"column_end":22},"name":"new_pretty","qualname":"<Encoder<'a>>::new_pretty","value":"fn (writer: &'a mut fmt::Write) -> Encoder<'a>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":108330,"byte_end":108333,"line_start":599,"line_end":599,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder<'a>>::new","value":"fn (writer: &'a mut fmt::Write) -> Encoder<'a>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":108642,"byte_end":108652,"line_start":609,"line_end":609,"column_start":12,"column_end":22},"name":"set_indent","qualname":"<Encoder<'a>>::set_indent","value":"fn (&mut self, new_indent: u32) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":447},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":121740,"byte_end":121747,"line_start":947,"line_end":947,"column_start":8,"column_end":15},"name":"as_json","qualname":"::json::as_json","value":"fn <T> (t: &T) -> AsJson<T>","parent":null,"children":[],"decl_id":null,"docs":" Create an `AsJson` wrapper which can be used to print a value as JSON\n on-the-fly via `write!`\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":448},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":121926,"byte_end":121940,"line_start":953,"line_end":953,"column_start":8,"column_end":22},"name":"as_pretty_json","qualname":"::json::as_pretty_json","value":"fn <T> (t: &T) -> AsPrettyJson<T>","parent":null,"children":[],"decl_id":null,"docs":" Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\n on-the-fly via `write!`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":122106,"byte_end":122117,"line_start":959,"line_end":959,"column_start":12,"column_end":23},"name":"from_reader","qualname":"<Json>::from_reader","value":"fn (rdr: &mut io::Read) -> Result<Self, BuilderError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":122589,"byte_end":122597,"line_start":974,"line_end":974,"column_start":12,"column_end":20},"name":"from_str","qualname":"<Json>::from_str","value":"fn (s: &str) -> Result<Self, BuilderError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":122849,"byte_end":122855,"line_start":981,"line_end":981,"column_start":12,"column_end":18},"name":"pretty","qualname":"<Json>::pretty","value":"fn (&self) -> PrettyJson","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":123058,"byte_end":123062,"line_start":987,"line_end":987,"column_start":12,"column_end":16},"name":"find","qualname":"<Json>::find","value":"fn <'a, > (&'a self, key: &str) -> Option<&'a Json>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":123451,"byte_end":123460,"line_start":997,"line_end":997,"column_start":12,"column_end":21},"name":"find_path","qualname":"<Json>::find_path","value":"fn <'a, > (&'a self, keys: &[&str]) -> Option<&'a Json>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":123970,"byte_end":123976,"line_start":1011,"line_end":1011,"column_start":12,"column_end":18},"name":"search","qualname":"<Json>::search","value":"fn <'a, > (&'a self, key: &str) -> Option<&'a Json>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":124681,"byte_end":124690,"line_start":1032,"line_end":1032,"column_start":12,"column_end":21},"name":"is_object","qualname":"<Json>::is_object","value":"fn <'a, > (&'a self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":124888,"byte_end":124897,"line_start":1038,"line_end":1038,"column_start":12,"column_end":21},"name":"as_object","qualname":"<Json>::as_object","value":"fn <'a, > (&'a self) -> Option<&'a Object>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":125184,"byte_end":125197,"line_start":1047,"line_end":1047,"column_start":12,"column_end":25},"name":"as_object_mut","qualname":"<Json>::as_object_mut","value":"fn <'a, > (&'a mut self) -> Option<&'a mut Object>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":125477,"byte_end":125488,"line_start":1056,"line_end":1056,"column_start":12,"column_end":23},"name":"into_object","qualname":"<Json>::into_object","value":"fn (self) -> Option<Object>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":125707,"byte_end":125715,"line_start":1064,"line_end":1064,"column_start":12,"column_end":20},"name":"is_array","qualname":"<Json>::is_array","value":"fn <'a, > (&'a self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":125909,"byte_end":125917,"line_start":1070,"line_end":1070,"column_start":12,"column_end":20},"name":"as_array","qualname":"<Json>::as_array","value":"fn <'a, > (&'a self) -> Option<&'a Array>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":126205,"byte_end":126217,"line_start":1079,"line_end":1079,"column_start":12,"column_end":24},"name":"as_array_mut","qualname":"<Json>::as_array_mut","value":"fn <'a, > (&'a mut self) -> Option<&'a mut Array>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":126494,"byte_end":126504,"line_start":1088,"line_end":1088,"column_start":12,"column_end":22},"name":"into_array","qualname":"<Json>::into_array","value":"fn (self) -> Option<Array>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":126725,"byte_end":126734,"line_start":1096,"line_end":1096,"column_start":12,"column_end":21},"name":"is_string","qualname":"<Json>::is_string","value":"fn <'a, > (&'a self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":126911,"byte_end":126920,"line_start":1102,"line_end":1102,"column_start":12,"column_end":21},"name":"as_string","qualname":"<Json>::as_string","value":"fn <'a, > (&'a self) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":127150,"byte_end":127159,"line_start":1110,"line_end":1110,"column_start":12,"column_end":21},"name":"is_number","qualname":"<Json>::is_number","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":127389,"byte_end":127395,"line_start":1118,"line_end":1118,"column_start":12,"column_end":18},"name":"is_i64","qualname":"<Json>::is_i64","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":127595,"byte_end":127601,"line_start":1126,"line_end":1126,"column_start":12,"column_end":18},"name":"is_u64","qualname":"<Json>::is_u64","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":127801,"byte_end":127807,"line_start":1134,"line_end":1134,"column_start":12,"column_end":18},"name":"is_f64","qualname":"<Json>::is_f64","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":128032,"byte_end":128038,"line_start":1143,"line_end":1143,"column_start":12,"column_end":18},"name":"as_i64","qualname":"<Json>::as_i64","value":"fn (&self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":128373,"byte_end":128379,"line_start":1154,"line_end":1154,"column_start":12,"column_end":18},"name":"as_u64","qualname":"<Json>::as_u64","value":"fn (&self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":128666,"byte_end":128672,"line_start":1164,"line_end":1164,"column_start":12,"column_end":18},"name":"as_f64","qualname":"<Json>::as_f64","value":"fn (&self) -> Option<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":128972,"byte_end":128982,"line_start":1174,"line_end":1174,"column_start":12,"column_end":22},"name":"is_boolean","qualname":"<Json>::is_boolean","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":129155,"byte_end":129165,"line_start":1180,"line_end":1180,"column_start":12,"column_end":22},"name":"as_boolean","qualname":"<Json>::as_boolean","value":"fn (&self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":129379,"byte_end":129386,"line_start":1188,"line_end":1188,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Json>::is_null","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":129536,"byte_end":129543,"line_start":1194,"line_end":1194,"column_start":12,"column_end":19},"name":"as_null","qualname":"<Json>::as_null","value":"fn (&self) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485324},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":130170,"byte_end":130181,"line_start":1224,"line_end":1224,"column_start":5,"column_end":16},"name":"ObjectStart","qualname":"::json::JsonEvent::ObjectStart","value":"JsonEvent::ObjectStart","parent":{"krate":0,"index":858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485325},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":130187,"byte_end":130196,"line_start":1225,"line_end":1225,"column_start":5,"column_end":14},"name":"ObjectEnd","qualname":"::json::JsonEvent::ObjectEnd","value":"JsonEvent::ObjectEnd","parent":{"krate":0,"index":858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485326},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":130202,"byte_end":130212,"line_start":1226,"line_end":1226,"column_start":5,"column_end":15},"name":"ArrayStart","qualname":"::json::JsonEvent::ArrayStart","value":"JsonEvent::ArrayStart","parent":{"krate":0,"index":858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485327},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":130218,"byte_end":130226,"line_start":1227,"line_end":1227,"column_start":5,"column_end":13},"name":"ArrayEnd","qualname":"::json::JsonEvent::ArrayEnd","value":"JsonEvent::ArrayEnd","parent":{"krate":0,"index":858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485328},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":130232,"byte_end":130244,"line_start":1228,"line_end":1228,"column_start":5,"column_end":17},"name":"BooleanValue","qualname":"::json::JsonEvent::BooleanValue","value":"JsonEvent::BooleanValue(bool)","parent":{"krate":0,"index":858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485330},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":130256,"byte_end":130264,"line_start":1229,"line_end":1229,"column_start":5,"column_end":13},"name":"I64Value","qualname":"::json::JsonEvent::I64Value","value":"JsonEvent::I64Value(i64)","parent":{"krate":0,"index":858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485332},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":130275,"byte_end":130283,"line_start":1230,"line_end":1230,"column_start":5,"column_end":13},"name":"U64Value","qualname":"::json::JsonEvent::U64Value","value":"JsonEvent::U64Value(u64)","parent":{"krate":0,"index":858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485334},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":130294,"byte_end":130302,"line_start":1231,"line_end":1231,"column_start":5,"column_end":13},"name":"F64Value","qualname":"::json::JsonEvent::F64Value","value":"JsonEvent::F64Value(f64)","parent":{"krate":0,"index":858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485336},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":130313,"byte_end":130324,"line_start":1232,"line_end":1232,"column_start":5,"column_end":16},"name":"StringValue","qualname":"::json::JsonEvent::StringValue","value":"JsonEvent::StringValue(string::String)","parent":{"krate":0,"index":858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485338},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":130346,"byte_end":130355,"line_start":1233,"line_end":1233,"column_start":5,"column_end":14},"name":"NullValue","qualname":"::json::JsonEvent::NullValue","value":"JsonEvent::NullValue","parent":{"krate":0,"index":858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485339},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":130361,"byte_end":130366,"line_start":1234,"line_end":1234,"column_start":5,"column_end":10},"name":"Error","qualname":"::json::JsonEvent::Error","value":"JsonEvent::Error(ParserError)","parent":{"krate":0,"index":858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":858},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":130154,"byte_end":130163,"line_start":1223,"line_end":1223,"column_start":10,"column_end":19},"name":"JsonEvent","qualname":"::json::JsonEvent","value":"JsonEvent::{ObjectStart, ObjectEnd, ArrayStart, ArrayEnd, BooleanValue, I64Value, U64Value, F64Value, StringValue, NullValue, Error}","parent":null,"children":[{"krate":0,"index":2147485324},{"krate":0,"index":2147485325},{"krate":0,"index":2147485326},{"krate":0,"index":2147485327},{"krate":0,"index":2147485328},{"krate":0,"index":2147485330},{"krate":0,"index":2147485332},{"krate":0,"index":2147485334},{"krate":0,"index":2147485336},{"krate":0,"index":2147485338},{"krate":0,"index":2147485339}],"decl_id":null,"docs":" The output of the streaming parser.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":483},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":131050,"byte_end":131055,"line_start":1258,"line_end":1258,"column_start":12,"column_end":17},"name":"Stack","qualname":"::json::Stack","value":"Stack {  }","parent":null,"children":[{"krate":0,"index":2147483936},{"krate":0,"index":2147483937}],"decl_id":null,"docs":" A Stack represents the current position of the parser in the logical\n structure of the JSON stream.\n For example foo.bar[3].x\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485350},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":131366,"byte_end":131371,"line_start":1268,"line_end":1268,"column_start":5,"column_end":10},"name":"Index","qualname":"::json::StackElement::Index","value":"StackElement::Index(u32)","parent":{"krate":0,"index":870},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147485352},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":131382,"byte_end":131385,"line_start":1269,"line_end":1269,"column_start":5,"column_end":8},"name":"Key","qualname":"::json::StackElement::Key","value":"StackElement::Key(&'l str)","parent":{"krate":0,"index":870},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":870},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":131343,"byte_end":131355,"line_start":1267,"line_end":1267,"column_start":10,"column_end":22},"name":"StackElement","qualname":"::json::StackElement","value":"StackElement::{Index, Key}","parent":null,"children":[{"krate":0,"index":2147485350},{"krate":0,"index":2147485352}],"decl_id":null,"docs":" StackElements compose a Stack.\n For example, Key(\"foo\"), Key(\"bar\"), Index(3) and Key(\"x\") are the\n StackElements compositing the stack that represents foo.bar[3].x\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":131680,"byte_end":131683,"line_start":1281,"line_end":1281,"column_start":12,"column_end":15},"name":"new","qualname":"<Stack>::new","value":"fn () -> Stack","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":131828,"byte_end":131831,"line_start":1286,"line_end":1286,"column_start":12,"column_end":15},"name":"len","qualname":"<Stack>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":131925,"byte_end":131933,"line_start":1289,"line_end":1289,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Stack>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":132147,"byte_end":132150,"line_start":1294,"line_end":1294,"column_start":12,"column_end":15},"name":"get","qualname":"<Stack>::get","value":"fn <'l, > (&'l self, idx: usize) -> StackElement<'l>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":132579,"byte_end":132590,"line_start":1305,"line_end":1305,"column_start":12,"column_end":23},"name":"is_equal_to","qualname":"<Stack>::is_equal_to","value":"fn (&self, rhs: &[StackElement]) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":132942,"byte_end":132953,"line_start":1315,"line_end":1315,"column_start":12,"column_end":23},"name":"starts_with","qualname":"<Stack>::starts_with","value":"fn (&self, rhs: &[StackElement]) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":133301,"byte_end":133310,"line_start":1325,"line_end":1325,"column_start":12,"column_end":21},"name":"ends_with","qualname":"<Stack>::ends_with","value":"fn (&self, rhs: &[StackElement]) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":133651,"byte_end":133654,"line_start":1335,"line_end":1335,"column_start":12,"column_end":15},"name":"top","qualname":"<Stack>::top","value":"fn <'l, > (&'l self) -> Option<StackElement<'l>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":498},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":135700,"byte_end":135706,"line_start":1395,"line_end":1395,"column_start":12,"column_end":18},"name":"Parser","qualname":"::json::Parser","value":"Parser {  }","parent":null,"children":[{"krate":0,"index":2147483940},{"krate":0,"index":2147483941},{"krate":0,"index":2147483942},{"krate":0,"index":2147483943},{"krate":0,"index":2147483944},{"krate":0,"index":2147483945}],"decl_id":null,"docs":" A streaming JSON parser implemented as an iterator of JsonEvent, consuming\n an iterator of char.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":136705,"byte_end":136708,"line_start":1432,"line_end":1432,"column_start":12,"column_end":15},"name":"new","qualname":"<Parser<T>>::new","value":"fn (rdr: T) -> Parser<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":137084,"byte_end":137089,"line_start":1447,"line_end":1447,"column_start":12,"column_end":17},"name":"stack","qualname":"<Parser<T>>::stack","value":"fn <'l, > (&'l self) -> &'l Stack","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":528},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":153021,"byte_end":153028,"line_start":1949,"line_end":1949,"column_start":12,"column_end":19},"name":"Builder","qualname":"::json::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":2147483952},{"krate":0,"index":2147483953}],"decl_id":null,"docs":" A Builder consumes a json::Parser to create a generic Json structure.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":153176,"byte_end":153179,"line_start":1956,"line_end":1956,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder<T>>::new","value":"fn (src: T) -> Builder<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":153323,"byte_end":153328,"line_start":1961,"line_end":1961,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder<T>>::build","value":"fn (&mut self) -> Result<Json, BuilderError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":536},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":156022,"byte_end":156029,"line_start":2041,"line_end":2041,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::json::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":2147483956}],"decl_id":null,"docs":" A structure to decode JSON to values in rust.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":156161,"byte_end":156164,"line_start":2047,"line_end":2047,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder>::new","value":"fn (json: Json) -> Decoder","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":569},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":166883,"byte_end":166889,"line_start":2379,"line_end":2379,"column_start":11,"column_end":17},"name":"ToJson","qualname":"::json::ToJson","value":"ToJson","parent":null,"children":[{"krate":0,"index":570}],"decl_id":null,"docs":" A trait for converting values to JSON\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":166959,"byte_end":166966,"line_start":2381,"line_end":2381,"column_start":8,"column_end":15},"name":"to_json","qualname":"::json::ToJson::to_json","value":"fn (&self) -> Json","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" A trait for converting values to JSON\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":171598,"byte_end":171604,"line_start":2559,"line_end":2559,"column_start":12,"column_end":18},"name":"indent","qualname":"<AsPrettyJson<'a, T>>::indent","value":"fn (mut self, indent: u32) -> AsPrettyJson<'a, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[],"refs":[{"kind":"Mod","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2464,"byte_end":2470,"line_start":73,"line_end":73,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":273}},{"kind":"Mod","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2480,"byte_end":2483,"line_start":74,"line_end":74,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":308}},{"kind":"Mod","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2493,"byte_end":2497,"line_start":75,"line_end":75,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":331}}],"macro_refs":[],"relations":[{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":38053,"byte_end":38058,"line_start":902,"line_end":902,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":841},"to":{"krate":0,"index":100}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":40823,"byte_end":40829,"line_start":1033,"line_end":1033,"column_start":20,"column_end":26},"kind":"Impl","from":{"krate":3,"index":2734},"to":{"krate":0,"index":98}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":40955,"byte_end":40961,"line_start":1039,"line_end":1039,"column_start":20,"column_end":26},"kind":"Impl","from":{"krate":3,"index":2734},"to":{"krate":0,"index":100}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":42510,"byte_end":42513,"line_start":1111,"line_end":1111,"column_start":43,"column_end":46},"kind":"Impl","from":{"krate":3,"index":120},"to":{"krate":0,"index":98}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":42659,"byte_end":42662,"line_start":1117,"line_end":1117,"column_start":35,"column_end":38},"kind":"Impl","from":{"krate":3,"index":120},"to":{"krate":0,"index":100}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":42827,"byte_end":42830,"line_start":1123,"line_end":1123,"column_start":35,"column_end":38},"kind":"Impl","from":{"krate":3,"index":120},"to":{"krate":0,"index":100}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":43033,"byte_end":43035,"line_start":1130,"line_end":1130,"column_start":33,"column_end":35},"kind":"Impl","from":{"krate":3,"index":428},"to":{"krate":0,"index":98}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":43193,"byte_end":43195,"line_start":1137,"line_end":1137,"column_start":33,"column_end":35},"kind":"Impl","from":{"krate":3,"index":428},"to":{"krate":0,"index":100}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":43393,"byte_end":43396,"line_start":1144,"line_end":1144,"column_start":56,"column_end":59},"kind":"Impl","from":{"krate":3,"index":1333},"to":{"krate":0,"index":98}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":43560,"byte_end":43563,"line_start":1151,"line_end":1151,"column_start":35,"column_end":38},"kind":"Impl","from":{"krate":3,"index":1333},"to":{"krate":0,"index":100}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":44104,"byte_end":44107,"line_start":1171,"line_end":1171,"column_start":33,"column_end":36},"kind":"Impl","from":{"krate":3,"index":2157},"to":{"krate":0,"index":98}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":44414,"byte_end":44417,"line_start":1182,"line_end":1182,"column_start":33,"column_end":36},"kind":"Impl","from":{"krate":3,"index":2157},"to":{"krate":0,"index":100}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":44777,"byte_end":44783,"line_start":1194,"line_end":1194,"column_start":33,"column_end":39},"kind":"Impl","from":{"krate":2,"index":17335},"to":{"krate":0,"index":98}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":45093,"byte_end":45099,"line_start":1205,"line_end":1205,"column_start":33,"column_end":39},"kind":"Impl","from":{"krate":2,"index":17335},"to":{"krate":0,"index":100}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":45403,"byte_end":45409,"line_start":1217,"line_end":1217,"column_start":46,"column_end":52},"kind":"Impl","from":{"krate":2,"index":17392},"to":{"krate":0,"index":98}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":46217,"byte_end":46223,"line_start":1242,"line_end":1242,"column_start":48,"column_end":54},"kind":"Impl","from":{"krate":2,"index":17392},"to":{"krate":0,"index":100}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":46933,"byte_end":46944,"line_start":1264,"line_end":1264,"column_start":23,"column_end":34},"kind":"Impl","from":{"krate":2,"index":849},"to":{"krate":0,"index":98}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":47072,"byte_end":47083,"line_start":1270,"line_end":1270,"column_start":23,"column_end":34},"kind":"Impl","from":{"krate":2,"index":849},"to":{"krate":0,"index":100}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":49965,"byte_end":49969,"line_start":1358,"line_end":1358,"column_start":26,"column_end":30},"kind":"Impl","from":{"krate":1,"index":2969},"to":{"krate":0,"index":98}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":50565,"byte_end":50572,"line_start":1376,"line_end":1376,"column_start":26,"column_end":33},"kind":"Impl","from":{"krate":1,"index":6368},"to":{"krate":0,"index":98}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":50706,"byte_end":50713,"line_start":1382,"line_end":1382,"column_start":26,"column_end":33},"kind":"Impl","from":{"krate":1,"index":6368},"to":{"krate":0,"index":100}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":51710,"byte_end":51714,"line_start":1411,"line_end":1411,"column_start":41,"column_end":45},"kind":"Impl","from":{"krate":2,"index":1400},"to":{"krate":0,"index":98}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":51868,"byte_end":51872,"line_start":1417,"line_end":1417,"column_start":41,"column_end":45},"kind":"Impl","from":{"krate":2,"index":1400},"to":{"krate":0,"index":100}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":52207,"byte_end":52214,"line_start":1428,"line_end":1428,"column_start":34,"column_end":41},"kind":"Impl","from":{"krate":2,"index":1433},"to":{"krate":0,"index":98}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":52364,"byte_end":52371,"line_start":1434,"line_end":1434,"column_start":34,"column_end":41},"kind":"Impl","from":{"krate":2,"index":1433},"to":{"krate":0,"index":100}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":52542,"byte_end":52545,"line_start":1440,"line_end":1440,"column_start":33,"column_end":36},"kind":"Impl","from":{"krate":3,"index":293},"to":{"krate":0,"index":98}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":52699,"byte_end":52702,"line_start":1446,"line_end":1446,"column_start":43,"column_end":46},"kind":"Impl","from":{"krate":3,"index":293},"to":{"krate":0,"index":100}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":53189,"byte_end":53196,"line_start":1460,"line_end":1460,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":25},"to":{"krate":0,"index":226}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":54390,"byte_end":54391,"line_start":1495,"line_end":1495,"column_start":36,"column_end":37},"kind":"Impl","from":{"krate":0,"index":2147483816},"to":{"krate":0,"index":226}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":55043,"byte_end":55050,"line_start":1515,"line_end":1515,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":62},"to":{"krate":0,"index":230}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":56259,"byte_end":56260,"line_start":1550,"line_end":1550,"column_start":37,"column_end":38},"kind":"Impl","from":{"krate":0,"index":2147483822},"to":{"krate":0,"index":230}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,99,111,108,108,101,99,116,105,111,110,95,105,109,112,108,115,46,114,115],"byte_start":62899,"byte_end":62909,"line_start":20,"line_end":20,"column_start":17,"column_end":27},"kind":"Impl","from":{"krate":3,"index":1425},"to":{"krate":0,"index":98}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,99,111,108,108,101,99,116,105,111,110,95,105,109,112,108,115,46,114,115],"byte_start":63217,"byte_end":63227,"line_start":31,"line_end":31,"column_start":33,"column_end":43},"kind":"Impl","from":{"krate":3,"index":1425},"to":{"krate":0,"index":100}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,99,111,108,108,101,99,116,105,111,110,95,105,109,112,108,115,46,114,115],"byte_start":63584,"byte_end":63592,"line_start":43,"line_end":43,"column_start":34,"column_end":42},"kind":"Impl","from":{"krate":3,"index":2441},"to":{"krate":0,"index":98}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,99,111,108,108,101,99,116,105,111,110,95,105,109,112,108,115,46,114,115],"byte_start":63900,"byte_end":63908,"line_start":54,"line_end":54,"column_start":33,"column_end":41},"kind":"Impl","from":{"krate":3,"index":2441},"to":{"krate":0,"index":100}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,99,111,108,108,101,99,116,105,111,110,95,105,109,112,108,115,46,114,115],"byte_start":64307,"byte_end":64315,"line_start":69,"line_end":69,"column_start":17,"column_end":25},"kind":"Impl","from":{"krate":3,"index":936},"to":{"krate":0,"index":98}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,99,111,108,108,101,99,116,105,111,110,95,105,109,112,108,115,46,114,115],"byte_start":64770,"byte_end":64778,"line_start":86,"line_end":86,"column_start":17,"column_end":25},"kind":"Impl","from":{"krate":3,"index":936},"to":{"krate":0,"index":100}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,99,111,108,108,101,99,116,105,111,110,95,105,109,112,108,115,46,114,115],"byte_start":65264,"byte_end":65272,"line_start":102,"line_end":102,"column_start":17,"column_end":25},"kind":"Impl","from":{"krate":3,"index":2700},"to":{"krate":0,"index":98}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,99,111,108,108,101,99,116,105,111,110,95,105,109,112,108,115,46,114,115],"byte_start":65627,"byte_end":65635,"line_start":117,"line_end":117,"column_start":17,"column_end":25},"kind":"Impl","from":{"krate":3,"index":2700},"to":{"krate":0,"index":100}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,99,111,108,108,101,99,116,105,111,110,95,105,109,112,108,115,46,114,115],"byte_start":65974,"byte_end":65981,"line_start":129,"line_end":129,"column_start":26,"column_end":33},"kind":"Impl","from":{"krate":1,"index":5951},"to":{"krate":0,"index":98}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,99,111,108,108,101,99,116,105,111,110,95,105,109,112,108,115,46,114,115],"byte_start":66458,"byte_end":66465,"line_start":146,"line_end":146,"column_start":26,"column_end":33},"kind":"Impl","from":{"krate":1,"index":5951},"to":{"krate":0,"index":100}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,99,111,108,108,101,99,116,105,111,110,95,105,109,112,108,115,46,114,115],"byte_start":67023,"byte_end":67030,"line_start":163,"line_end":163,"column_start":23,"column_end":30},"kind":"Impl","from":{"krate":1,"index":5966},"to":{"krate":0,"index":98}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,99,111,108,108,101,99,116,105,111,110,95,105,109,112,108,115,46,114,115],"byte_start":67393,"byte_end":67400,"line_start":176,"line_end":176,"column_start":23,"column_end":30},"kind":"Impl","from":{"krate":1,"index":5966},"to":{"krate":0,"index":100}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":74911,"byte_end":74926,"line_start":216,"line_end":216,"column_start":21,"column_end":36},"kind":"Impl","from":{"krate":0,"index":817},"to":{"krate":2,"index":3471}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":75234,"byte_end":75249,"line_start":226,"line_end":226,"column_start":23,"column_end":38},"kind":"Impl","from":{"krate":0,"index":817},"to":{"krate":1,"index":1199}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,98,97,115,101,54,52,46,114,115],"byte_start":75464,"byte_end":75479,"line_start":235,"line_end":235,"column_start":23,"column_end":38},"kind":"Impl","from":{"krate":0,"index":817},"to":{"krate":2,"index":3473}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,104,101,120,46,114,115],"byte_start":86887,"byte_end":86899,"line_start":78,"line_end":78,"column_start":21,"column_end":33},"kind":"Impl","from":{"krate":0,"index":821},"to":{"krate":2,"index":3471}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,104,101,120,46,114,115],"byte_start":87212,"byte_end":87224,"line_start":88,"line_end":88,"column_start":23,"column_end":35},"kind":"Impl","from":{"krate":0,"index":821},"to":{"krate":1,"index":1199}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,104,101,120,46,114,115],"byte_start":87438,"byte_end":87450,"line_start":97,"line_end":97,"column_start":23,"column_end":35},"kind":"Impl","from":{"krate":0,"index":821},"to":{"krate":2,"index":3473}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":100328,"byte_end":100339,"line_start":310,"line_end":310,"column_start":20,"column_end":31},"kind":"Impl","from":{"krate":0,"index":845},"to":{"krate":2,"index":1119}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":101121,"byte_end":101133,"line_start":340,"line_end":340,"column_start":20,"column_end":32},"kind":"Impl","from":{"krate":0,"index":854},"to":{"krate":2,"index":1119}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":101431,"byte_end":101443,"line_start":350,"line_end":350,"column_start":16,"column_end":28},"kind":"Impl","from":{"krate":0,"index":854},"to":{"krate":2,"index":1213}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":103274,"byte_end":103283,"line_start":399,"line_end":399,"column_start":21,"column_end":30},"kind":"Impl","from":{"krate":0,"index":839},"to":{"krate":2,"index":3471}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":103404,"byte_end":103416,"line_start":405,"line_end":405,"column_start":19,"column_end":31},"kind":"Impl","from":{"krate":0,"index":848},"to":{"krate":1,"index":1199}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":103658,"byte_end":103670,"line_start":415,"line_end":415,"column_start":23,"column_end":35},"kind":"Impl","from":{"krate":0,"index":848},"to":{"krate":2,"index":3473}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":103802,"byte_end":103814,"line_start":421,"line_end":421,"column_start":28,"column_end":40},"kind":"Impl","from":{"krate":0,"index":848},"to":{"krate":2,"index":1232}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":103928,"byte_end":103939,"line_start":427,"line_end":427,"column_start":19,"column_end":30},"kind":"Impl","from":{"krate":0,"index":845},"to":{"krate":1,"index":1199}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":104028,"byte_end":104039,"line_start":431,"line_end":431,"column_start":23,"column_end":34},"kind":"Impl","from":{"krate":0,"index":845},"to":{"krate":2,"index":3473}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":104169,"byte_end":104180,"line_start":437,"line_end":437,"column_start":26,"column_end":37},"kind":"Impl","from":{"krate":0,"index":845},"to":{"krate":2,"index":1232}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":104276,"byte_end":104288,"line_start":443,"line_end":443,"column_start":19,"column_end":31},"kind":"Impl","from":{"krate":0,"index":854},"to":{"krate":1,"index":1199}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":104370,"byte_end":104382,"line_start":447,"line_end":447,"column_start":23,"column_end":35},"kind":"Impl","from":{"krate":0,"index":854},"to":{"krate":2,"index":3473}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":104513,"byte_end":104525,"line_start":453,"line_end":453,"column_start":27,"column_end":39},"kind":"Impl","from":{"krate":0,"index":854},"to":{"krate":2,"index":1232}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":107795,"byte_end":107802,"line_start":583,"line_end":583,"column_start":10,"column_end":17},"kind":"Impl","from":{"krate":0,"index":403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":109123,"byte_end":109130,"line_start":622,"line_end":622,"column_start":24,"column_end":31},"kind":"Impl","from":{"krate":0,"index":403},"to":{"krate":0,"index":25}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":121160,"byte_end":121164,"line_start":930,"line_end":930,"column_start":20,"column_end":24},"kind":"Impl","from":{"krate":0,"index":825},"to":{"krate":0,"index":98}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":122035,"byte_end":122039,"line_start":957,"line_end":957,"column_start":6,"column_end":10},"kind":"Impl","from":{"krate":0,"index":825},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":129695,"byte_end":129699,"line_start":1202,"line_end":1202,"column_start":30,"column_end":34},"kind":"Impl","from":{"krate":0,"index":825},"to":{"krate":2,"index":998}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":129832,"byte_end":129836,"line_start":1210,"line_end":1210,"column_start":23,"column_end":27},"kind":"Impl","from":{"krate":0,"index":825},"to":{"krate":2,"index":998}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":131661,"byte_end":131666,"line_start":1280,"line_end":1280,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":483},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":136057,"byte_end":136063,"line_start":1407,"line_end":1407,"column_start":45,"column_end":51},"kind":"Impl","from":{"krate":0,"index":498},"to":{"krate":2,"index":1686}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":136649,"byte_end":136655,"line_start":1430,"line_end":1430,"column_start":32,"column_end":38},"kind":"Impl","from":{"krate":0,"index":498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":153121,"byte_end":153128,"line_start":1954,"line_end":1954,"column_start":32,"column_end":39},"kind":"Impl","from":{"krate":0,"index":528},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":156062,"byte_end":156069,"line_start":2045,"line_end":2045,"column_start":6,"column_end":13},"kind":"Impl","from":{"krate":0,"index":536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":156242,"byte_end":156249,"line_start":2052,"line_end":2052,"column_start":6,"column_end":13},"kind":"Impl","from":{"krate":0,"index":536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":158395,"byte_end":158402,"line_start":2118,"line_end":2118,"column_start":20,"column_end":27},"kind":"Impl","from":{"krate":0,"index":536},"to":{"krate":0,"index":62}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":167444,"byte_end":167448,"line_start":2404,"line_end":2404,"column_start":17,"column_end":21},"kind":"Impl","from":{"krate":0,"index":825},"to":{"krate":0,"index":569}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":168099,"byte_end":168105,"line_start":2435,"line_end":2435,"column_start":25,"column_end":31},"kind":"Impl","from":{"krate":3,"index":2734},"to":{"krate":0,"index":569}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":169234,"byte_end":169237,"line_start":2475,"line_end":2475,"column_start":28,"column_end":31},"kind":"Impl","from":{"krate":3,"index":2157},"to":{"krate":0,"index":569}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":169367,"byte_end":169375,"line_start":2479,"line_end":2479,"column_start":28,"column_end":36},"kind":"Impl","from":{"krate":3,"index":936},"to":{"krate":0,"index":569}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":169633,"byte_end":169640,"line_start":2489,"line_end":2489,"column_start":28,"column_end":35},"kind":"Impl","from":{"krate":1,"index":5951},"to":{"krate":0,"index":569}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":169897,"byte_end":169903,"line_start":2499,"line_end":2499,"column_start":27,"column_end":33},"kind":"Impl","from":{"krate":2,"index":17335},"to":{"krate":0,"index":569}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":170163,"byte_end":170173,"line_start":2512,"line_end":2512,"column_start":29,"column_end":39},"kind":"Impl","from":{"krate":0,"index":601},"to":{"krate":2,"index":3441}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":170386,"byte_end":170390,"line_start":2521,"line_end":2521,"column_start":23,"column_end":27},"kind":"Impl","from":{"krate":0,"index":825},"to":{"krate":2,"index":3473}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":170748,"byte_end":170758,"line_start":2533,"line_end":2533,"column_start":27,"column_end":37},"kind":"Impl","from":{"krate":0,"index":357},"to":{"krate":2,"index":3473}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":171147,"byte_end":171153,"line_start":2545,"line_end":2545,"column_start":41,"column_end":47},"kind":"Impl","from":{"krate":0,"index":358},"to":{"krate":2,"index":3473}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":171510,"byte_end":171522,"line_start":2557,"line_end":2557,"column_start":13,"column_end":25},"kind":"Impl","from":{"krate":0,"index":359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":171751,"byte_end":171763,"line_start":2565,"line_end":2565,"column_start":41,"column_end":53},"kind":"Impl","from":{"krate":0,"index":359},"to":{"krate":2,"index":3473}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,115,101,114,105,97,108,105,122,101,45,48,46,51,46,50,52,47,115,114,99,47,106,115,111,110,46,114,115],"byte_start":172279,"byte_end":172283,"line_start":2581,"line_end":2581,"column_start":18,"column_end":22},"kind":"Impl","from":{"krate":0,"index":825},"to":{"krate":2,"index":2898}}]}